{"nativeedge.datatypes.swift.Connection": {"swift_username": {"type": "string", "required": true}, "swift_password": {"type": "string", "required": true}, "swift_auth_url": {"type": "string", "required": true}, "swift_region_name": {"type": "string", "required": true}}, "nativeedge.datatypes.aws.ConnectionConfig": {"aws_session_token": {"type": "string", "required": false}, "aws_access_key_id": {"type": "string", "required": false}, "aws_secret_access_key": {"type": "string", "required": false}, "region_name": {"type": "string", "required": false}, "endpoint_url": {"type": "string", "required": false}, "api_version": {"type": "string", "required": false}, "assume_role": {"type": "string", "required": false}, "additional_config": {"required": false}}, "nativeedge.datatypes.aws.dynamodb.Table.config": {"TableName": {"type": "string", "required": true}, "AttributeDefinitions": {"default": []}, "KeySchema": {"default": []}, "LocalSecondaryIndexes": {"default": []}, "GlobalSecondaryIndexes": {"default": []}, "BillingMode": {"type": "string", "required": false}, "ProvisionedThroughput": {"default": {}}, "StreamSpecification": {"default": {}}, "SSESpecification": {"default": {}}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.iam.Group.config": {"Path": {"type": "string", "required": false}, "GroupName": {"type": "string", "required": true, "default": "ne_test_group"}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.iam.AccessKey.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.iam.LoginProfile.config": {"UserName": {"type": "string", "required": false}, "Password": {"type": "string", "required": false}, "PasswordResetRequired": {"type": "boolean", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.iam.User.config": {"UserName": {"type": "string", "required": false}, "Path": {"type": "string", "required": false}, "PermissionsBoundary": {"type": "string", "required": false}, "Tags": {"default": []}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.iam.Role.config": {"AssumeRolePolicyDocument": {"required": true, "default": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "lambda.amazonaws.com"}, "Action": "sts:AssumeRole"}]}}, "RoleName": {"type": "string", "required": true, "default": "cfy_lambdarole"}, "Path": {"type": "string", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.iam.RolePolicy.config": {"RoleName": {"type": "string", "required": false}, "PolicyName": {"type": "string", "required": true}, "PolicyDocument": {"type": "string", "required": true}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.iam.InstanceProfile.config": {"InstanceProfileName": {"type": "string", "required": true, "default": "cfy_iam_user_instance_profile"}, "Path": {"type": "string", "required": true}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.iam.Policy.config": {"PolicyName": {"type": "string", "required": true}, "Path": {"type": "string", "required": false}, "PolicyDocument": {"type": "string", "required": true}, "Description": {"type": "string", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.lambda.Function.config": {"FunctionName": {"type": "string", "required": true}, "Runtime": {"type": "string", "required": true}, "Handler": {"type": "string", "required": true}, "Code": {"required": true}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.lambda.Invoke.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.lambda.Permission.config": {"FunctionName": {"type": "string", "required": false}, "StatementId": {"type": "string", "required": true}, "Action": {"type": "string", "required": true}, "Principal": {"type": "string", "required": true}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.rds.Instance.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.rds.InstanceReadReplica.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.rds.SubnetGroup.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.rds.OptionGroup.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.rds.Option.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.rds.ParameterGroup.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.rds.Parameter.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.route53.HostedZone.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.route53.RecordSet.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.elb.LoadBalancer.config": {"Name": {"type": "string", "required": true}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.elb.TargetGroup.config": {"Name": {"type": "string", "required": true}, "Protocol": {"type": "string", "required": false}, "Port": {"type": "string", "required": false}, "HealthCheckProtocol": {"type": "string", "required": false}, "HealthCheckPort": {"type": "string", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.elb.Listener.config": {"Protocol": {"type": "string", "required": true}, "Port": {"type": "integer", "required": true}, "DefaultActions": {"default": []}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.elb.Rule.config": {"Conditions": {"default": []}, "Priority": {"type": "integer", "required": true}, "Actions": {"default": []}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.elb.Classic.LoadBalancer.config": {"LoadBalancerName": {"type": "string", "required": true}, "Listeners": {"default": {}}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.elb.Classic.Listener.config": {"LoadBalancerName": {"type": "string", "required": false}, "Listeners": {"default": {}}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.elb.Classic.healthCheck.healthCheck": {"Target": {"type": "string", "required": true}, "Interval": {"type": "integer", "required": true}, "Timeout": {"type": "integer", "required": true}, "UnhealthyThreshold": {"type": "integer", "required": true}, "HealthyThreshold": {"type": "integer", "required": true}}, "nativeedge.datatypes.aws.elb.Classic.HealthCheck.config": {"LoadBalancerName": {"type": "string", "required": false}, "HealthCheck": {"type": "nativeedge.datatypes.aws.elb.Classic.healthCheck.healthCheck", "required": true}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.elb.Classic.Policy.config": {"LoadBalancerName": {"type": "string", "required": false}, "PolicyName": {"type": "string", "required": true}, "PolicyTypeName": {"type": "string", "required": true}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.elb.Classic.StickinessPolicy.config": {"LoadBalancerName": {"type": "string", "required": false}, "PolicyName": {"type": "string", "required": true}, "CookieExpirationPeriod": {"type": "integer", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.SQS.Queue.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.SNS.Topic.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.SNS.Subscription.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.s3.BucketTagging.Tagging": {"TagSet": {"required": true, "default": []}}, "nativeedge.datatypes.aws.s3.BucketTagging.config": {"Bucket": {"type": "string", "required": false}, "Tagging": {"type": "nativeedge.datatypes.aws.s3.BucketTagging.Tagging", "required": true}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.s3.BucketLifecycleConfiguration.Lifecycle": {"Rules": {"default": [], "required": true}}, "nativeedge.datatypes.aws.s3.BucketLifecycleConfiguration.config": {"Bucket": {"type": "string", "required": false}, "LifecycleConfiguration": {"type": "nativeedge.datatypes.aws.s3.BucketLifecycleConfiguration.Lifecycle", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.s3.BucketPolicy.config": {"Bucket": {"type": "string", "required": false}, "ConfirmRemoveSelfBucketAccess": {"type": "boolean", "required": false}, "Policy": {"required": true, "default": {}}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.s3.CreateBucketConfiguration": {"LocationConstraint": {"type": "string", "required": false}}, "nativeedge.datatypes.aws.s3.Bucket.config": {"Bucket": {"type": "string", "required": true}, "ACL": {"type": "string", "required": false}, "CreateBucketConfiguration": {"type": "nativeedge.datatypes.aws.s3.CreateBucketConfiguration", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.s3.BucketObject.config": {"Bucket": {"type": "string", "required": false}, "Key": {"type": "string", "required": false}, "ACL": {"type": "string", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.Vpc.config": {"CidrBlock": {"type": "string", "required": true}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.VpcPeering.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.VpcPeeringRequest.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.Subnet.config": {"AvailabilityZone": {"type": "string", "required": false}, "CidrBlock": {"type": "string", "required": false}, "VpcId": {"type": "string", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.SecurityGroup.config": {"Description": {"type": "string", "required": true}, "GroupName": {"type": "string", "required": true}, "VpcId": {"type": "string", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.SecurityGroupRules.config": {"IpPermissions": {"default": []}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.NATGateway.config": {"ConnectivityType": {"type": "string", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.NetworkACL.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.Interface.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.Instances.LaunchTemplate": {"LaunchTemplateId": {"type": "string", "required": false}, "LaunchTemplateName": {"type": "string", "required": false}, "Version": {"type": "string", "required": false}}, "nativeedge.datatypes.aws.ec2.Instances.config": {"MinCount": {"type": "integer", "default": 1}, "MaxCount": {"type": "integer", "default": 1}, "ImageId": {"type": "string", "required": false}, "InstanceType": {"type": "string", "required": false}, "LaunchTemplate": {"type": "nativeedge.datatypes.aws.ec2.Instances.LaunchTemplate", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.SpotInstances.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.SpotFleetRequest.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.Keypair.config": {"KeyName": {"type": "string", "required": false}, "PublicKeyMaterial": {"type": "string", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.ElasticIP.config": {"Domain": {"type": "string", "default": "vpc"}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.NetworkAclEntry.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.DHCPOptions.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.VPNGateway.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.VPNConnection.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.VPNConnectionRoute.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.CustomerGateway.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.InternetGateway.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.TransitGateway.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.TransitGatewayVPCAttachment.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.TransitGatewayRouteTable.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.TransitGatewayRoute.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.RouteTable.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.Route.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.Image.config.create.BlockDeviceMappings": {"DeviceName": {"type": "string", "required": false}, "VirtualName": {"type": "string", "required": false}, "Ebs": {"type": "nativeedge.datatypes.aws.ec2.Image.config.create.BlockDeviceMappings.Ebs", "required": false}, "NoDevice": {"type": "string", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.Image.config": {"BlockDeviceMappings": {"type": "nativeedge.datatypes.aws.ec2.Image.config.create.BlockDeviceMappings", "required": false}, "Description": {"type": "string", "required": false}, "DryRun": {"type": "boolean", "required": false}, "InstanceId": {"type": "string", "required": false}, "Name": {"type": "string", "required": false}, "NoReboot": {"type": "boolean", "required": false}, "TagSpecifications": {"type": "nativeedge.datatypes.aws.TagSpecifications", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.Image.config.create.BlockDeviceMappings.Ebs": {"DeleteOnTermination": {"type": "boolean", "required": false}, "Iops": {"type": "integer", "required": false}, "SnapshotId": {"type": "string", "required": false}, "VolumeSize": {"type": "integer", "required": false}, "VolumeType": {"type": "string", "required": false}, "KmsKeyId": {"type": "string", "required": false}, "Throughput": {"type": "integer", "required": false}, "OutpostArn": {"type": "string", "required": false}, "Encrypted": {"type": "boolean", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.TagSpecifications": {"ResourceType": {"type": "string", "required": false}, "Tags": {"type": "list", "required": false}}, "nativeedge.datatypes.aws.ec2.Tags.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.EBSVolume.config": {"AvailabilityZone": {"type": "string", "required": true}, "Size": {"type": "integer", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ec2.EBSAttachment.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.autoscaling.LaunchTemplate": {"LaunchTemplateId": {"type": "string", "required": false}, "LaunchTemplateName": {"type": "string", "required": false}, "Version": {"type": "string", "required": false}}, "nativeedge.datatypes.aws.autoscaling.Group.config": {"AutoScalingGroupName": {"type": "string", "required": true}, "LaunchConfigurationName": {"type": "string", "required": false}, "LaunchTemplate": {"type": "nativeedge.datatypes.aws.autoscaling.LaunchTemplate", "required": false}, "InstanceId": {"type": "string", "required": false}, "MinSize": {"type": "integer", "required": true}, "MaxSize": {"type": "integer", "required": true}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.autoscaling.LaunchConfiguration.config": {"LaunchConfigurationName": {"type": "string", "required": true}, "ImageId": {"type": "string", "required": false}, "InstanceType": {"type": "string", "required": false}, "InstanceId": {"type": "string", "required": false}, "KeyName": {"type": "string", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.autoscaling.Policy.config": {"AutoScalingGroupName": {"type": "string", "required": false}, "PolicyName": {"type": "string", "required": true}, "PolicyType": {"type": "string", "required": false}, "AdjustmentType": {"type": "string", "required": false}, "ScalingAdjustment": {"type": "integer", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.autoscaling.LifecycleHook.config": {"LifecycleHookName": {"type": "string", "required": true}, "AutoScalingGroupName": {"type": "string", "required": false}, "LifecycleTransition": {"type": "string", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.autoscaling.NotificationConfiguration.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.cloudwatch.Alarm.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.cloudwatch.Rule.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.cloudwatch.Event.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.cloudwatch.Target.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.efs.FileSystem.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.efs.FileSystemTags.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.efs.MountTarget.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.kms.CustomerMasterKey.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.kms.Alias.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.kms.Grant.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.CloudFormation.Stack.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ECS.Cluster.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ECS.Service.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ECS.TaskDefinition.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.EKS.Cluster.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.EKS.NodeGroup.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.codepipeline.Pipeline.config": {"kwargs": {"default": {}}}, "nativeedge.datatypes.aws.cognitoidp.UserPool.config": {"PoolName": {"type": "string", "required": true}, "Policies": {"type": "dict", "required": false}, "LambdaConfig": {"type": "dict", "required": false}, "AutoVerifiedAttributes": {"type": "list", "required": false}, "AliasAttributes": {"type": "list", "required": false}, "UsernameAttributes": {"type": "list", "required": false}, "SmsVerificationMessage": {"type": "string", "required": false}, "EmailVerificationMessage": {"type": "string", "required": false}, "EmailVerificationSubject": {"type": "string", "required": false}, "VerificationMessageTemplate": {"type": "dict", "required": false}, "SmsAuthenticationMessage": {"type": "string", "required": false}, "MfaConfiguration": {"type": "string"}, "UserAttributeUpdateSettings": {"type": "dict", "required": false}, "DeviceConfiguration": {"type": "dict", "required": false}, "EmailConfiguration": {"type": "dict", "required": false}, "SmsConfiguration": {"type": "dict", "required": false}, "UserPoolTags": {"type": "dict", "required": false}, "AdminCreateUserConfig": {"type": "dict", "required": false}, "Schema": {"type": "list", "required": false}, "UserPoolAddOns": {"type": "dict", "required": false}, "UsernameConfiguration": {"type": "dict", "required": false}, "AccountRecoverySetting": {"type": "dict", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.cognitoidp.UserPoolClient.config": {"UserPoolId": {"type": "string", "required": true}, "ClientName": {"type": "string", "required": true}, "GenerateSecret": {"type": "boolean", "required": false}, "RefreshTokenValidity": {"type": "integer", "required": false}, "AccessTokenValidity": {"type": "integer", "required": false}, "IdTokenValidity": {"type": "integer", "required": false}, "TokenValidityUnits": {"type": "dict", "required": false}, "ReadAttributes": {"type": "list", "required": false}, "CallbackURLs": {"type": "list", "required": false}, "ExplicitAuthFlows": {"type": "list", "required": false}, "SupportedIdentityProviders": {"type": "list", "required": false}, "LogoutURLs": {"type": "list", "required": false}, "DefaultRedirectURI": {"type": "string", "required": false}, "AllowedOAuthFlows": {"type": "list", "required": false}, "AllowedOAuthScopes": {"type": "list", "required": false}, "AllowedOAuthFlowsUserPoolClient": {"type": "boolean", "required": false}, "AnalyticsConfiguration": {"type": "dict", "required": false}, "PreventUserExistenceErrors": {"type": "string", "required": false}, "EnableTokenRevocation": {"type": "boolean", "required": false}, "EnablePropagateAdditionalUserContextData": {"type": "boolean", "required": false}, "AuthSessionValidity": {"type": "integer", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.cognitoidp.IdentityProvider.config": {"UserPoolId": {"type": "string", "required": true}, "ProviderName": {"type": "string", "required": true}, "ProviderType": {"type": "string", "required": true}, "ProviderDetails": {"type": "dict", "required": true}, "AttributeMapping": {"type": "dict", "required": false}, "IdpIdentifiers": {"type": "list", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.cognito.IdentityPool.config": {"IdentityPoolName": {"type": "string", "required": true}, "AllowUnauthenticatedIdentities": {"type": "boolean", "required": true}, "AllowClassicFlow": {"type": "boolean", "required": false}, "SupportedLoginProviders": {"type": "dict", "required": false}, "DeveloperProviderName": {"type": "string", "required": false}, "OpenIdConnectProviderARNs": {"type": "list", "required": false}, "CognitoIdentityProviders": {"type": "list", "required": false}, "SamlProviderARNs": {"type": "list", "required": false}, "IdentityPoolTags": {"type": "dict", "required": false}, "kwargs": {"default": {}}}, "nativeedge.datatypes.aws.ecr.AuthenticationToken.config": {"registryIds": {"type": "list"}}, "nativeedge.datatypes.aws.ecr.Repository.config": {"registryId": {"type": "string", "required": false}, "repositoryName": {"type": "string", "required": true}, "tags": {"type": "list", "required": false}, "imageTagMutability": {"type": "string", "default": "MUTABLE"}, "imageScanningConfiguration": {"type": "dict", "default": {"scanOnPush": true}}, "encryptionConfiguration": {"type": "dict", "default": {"encryptionType": "AES256"}}}, "nativeedge.datatypes.azure.Config": {"environment_variables": {"type": "dict", "description": "You can provide any set of environment variables for use by managed identity.\nFor more information, please see: https://docs.microsoft.com/en-us/python/api/overview/azure/identity-readme?view=azure-python.\nIf you use this approach other parameters will be ignored.\n", "default": {}}, "username": {"type": "string", "required": false, "description": "Your azure username."}, "password": {"type": "string", "required": false, "description": "Your azure password."}, "endpoints_active_directory": {"description": "A Microsoft Azure Active Directory endpoint.\n", "type": "string", "default": "https://login.microsoftonline.com"}, "endpoints_resource_manager": {"description": "A Microsoft Azure Active Directory Resource Manager.\n", "type": "string", "default": "https://management.azure.com"}, "endpoint_resource": {"description": "A Microsoft Azure Active Directory Resource Id.\n", "type": "string", "default": "https://management.core.windows.net/"}, "endpoint_verify": {"description": "Connection certificate verify.\n", "type": "boolean", "default": true}, "subscription_id": {"description": "A Microsoft Azure subscription ID. This is a unique user account in Azure. This can be found in the Subscriptions tab on your dashboard.\n", "type": "string", "required": false}, "tenant_id": {"description": "A Microsoft Azure tenant ID. This can be found in the Azure Active Directory dashboard by accessing your directory. Open the Application Endpoints dialog and your tenant ID will be in the URL for the OAUTH2.0 TOKEN ENDPOINT.\n", "type": "string", "required": false}, "client_id": {"description": "A Microsoft Azure client ID. This can be found in the Azure Active Directory dashboard by accessing your directory. View the Applications tab and select the application used to access Azure APIs.  Your client ID can be found by expanding the ACCESS WEB APIS IN OTHER APPLICATIONS tab.\n", "type": "string", "required": false}, "client_secret": {"description": "A Microsoft Azure client secret key. This can be found or generated in the same location as your client ID.\n", "type": "string", "required": false}, "scale_name_separator": {"description": "When scaling resources, a unique name must be sent to the Azure API. Since names are left to the user to manage (the service does not generate unique IDs), this plugin will attempt to append characters or numbers to the end of the resource name when resources are scaled out. This value should be a character, or characters, that will separate the base name from the generated unique characters.  For instance, if the base name of a resource is \"myvm\", the separator is set to \"_\", and a scale workflow attempts to create another resource, the resulting name could be something like \"myvm_1\". This field can be left blank.\n", "type": "string", "required": false, "default": "_"}, "scale_name_suffix_chars": {"description": "A string of characters (ASCII) to be used when generating unique suffix data when scaling resources. See \"scale_name_separator\" for more information.\n", "type": "string", "required": true, "default": "1234567890"}, "certificate": {"description": "Certificate private key.\n", "type": "string", "required": false, "default": ""}, "thumbprint": {"description": "Certificate thumbprint.\n", "type": "string", "required": false, "default": ""}, "cloud_environment": {"description": "An alternative cloud environment.\n", "type": "string", "required": false, "default": ""}}, "nativeedge.types.azure.Common": {"name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}}, "nativeedge.types.azure.ExistingResources": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}}, "nativeedge.types.azure.storage.StorageAccountConfig": {"accountType": {"description": "An storage account type (case sensitive)\n", "type": "string", "required": false}, "networkAcls": {"required": false}, "supportsHttpsTrafficOnly": {"required": false}, "encryption": {"required": false}, "keySource": {"required": false}}, "nativeedge.types.azure.storage.DataDiskConfig": {"container_name": {"type": "string", "description": "Container for the resource.\n", "default": "vhds"}, "size": {"description": "Size of the Page Blob (Azure disk) in GiB. Maximum of 1023 GiB allowed.\n", "default": 20, "required": true}, "force_delete": {"description": "If set to true, the resource's \"delete\" lifecycle will purge the Azure Data Disk from the Azure Storage Account. If false, the Data Disk is left as-is in the Storage Account.\n", "default": false}}, "nativeedge.types.azure.storage.FileShareConfig": {"metadata": {"description": "Metadata (dict) for the File Share\n", "required": false}, "quota": {"description": "Quote, in GiB, for the maximum size of the file share\n", "required": false}}, "nativeedge.types.azure.network.VirtualNetworkConfig": {"addressSpace": {"default": {"addressPrefixes": ["10.10.0.0/16", "172.16.0.0/16"]}, "required": true}, "dhcpOptions": {"required": false}, "subnets": {"required": false}}, "nativeedge.types.azure.network.NetworkSecurityGroupConfig": {"securityRules": {"required": false}}, "nativeedge.types.azure.network.NetworkSecurityRuleConfig": {"description": {"type": "string", "required": false}, "protocol": {"type": "string", "required": true}, "sourcePortRange": {"type": "string", "required": false}, "destinationPortRange": {"type": "string", "required": false}, "sourceAddressPrefix": {"type": "string", "required": true}, "destinationAddressPrefix": {"type": "string", "required": true}, "access": {"type": "string", "required": true}, "priority": {"type": "integer", "required": true}, "direction": {"type": "string", "required": true}}, "nativeedge.types.azure.network.SubnetConfig": {"addressPrefix": {"required": false}, "networkSecurityGroup": {"required": false}, "routeTable": {"required": false}}, "nativeedge.types.azure.network.RouteTableConfig": {"routes": {"required": false}}, "nativeedge.types.azure.network.RouteConfig": {"addressPrefix": {"type": "string", "required": true}, "nextHopType": {"type": "string", "required": true}, "nextHopIpAddress": {"type": "string", "required": false}}, "nativeedge.types.azure.network.NetworkInterfaceCardConfig": {"networkSecurityGroups": {"required": false}, "ipConfigurations": {"required": false}, "dnsSettings": {"required": false}}, "nativeedge.types.azure.network.IPConfigurationConfig": {"privateIPAddress": {"type": "string", "description": "Static, private IP Address\n", "required": false}, "privateIPAllocationMethod": {"type": "string", "description": "Defines how a private IP address is assigned. Options are Static or Dynamic\n", "required": true}}, "nativeedge.types.azure.network.PublicIPAddressConfig": {"publicIPAllocationMethod": {"type": "string", "description": "Defines whether the IP address is stable or dynamic. Options are Static or Dynamic\n", "required": true}, "idleTimeoutInMinutes": {"type": "integer", "description": "Specifies the timeout (in minutes) for the TCP idle connection. The value can be set between 4 and 30 minutes\n", "required": false}, "domainNameLabel": {"type": "string", "description": "The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address.\n", "required": false}, "reverseFqdn": {"type": "string", "description": "A fully qualified domain name that resolves to this public IP address.\n", "required": false}}, "nativeedge.types.azure.compute.AvailabilitySetConfig": {"platformUpdateDomainCount": {"type": "integer", "required": false}, "platformFaultDomainCount": {"type": "integer", "required": false}, "sku": {"description": "dict to represent sku [for now we only provide name]\n", "required": false}}, "nativeedge.types.azure.compute.VirtualMachineSpotConfig": {"is_spot_instance": {"description": "set true if you want to consider spot instance params\n", "type": "boolean", "default": false, "required": false}, "priority": {"type": "string", "description": "Possible values include: 'Regular', 'Low', 'Spot'\n", "default": "Spot", "required": false}, "eviction_policy": {"type": "string", "description": "the only supported value is 'Deallocate'\n", "default": "Deallocate", "required": false}, "billing_profile": {"default": {"max_price": {"description": "the default max price is -1 if it is not provided\n", "default": -1.0, "required": false}}}}, "nativeedge.types.azure.compute.VirtualMachineConfig": {"hardwareProfile": {"required": true}, "storageProfile": {"required": true}, "osProfile": {"required": true}, "spot_instance": {"type": "nativeedge.types.azure.compute.VirtualMachineSpotConfig", "required": false}}, "nativeedge.types.azure.network.LoadBalancerConfig": {"frontendIPConfigurations": {"required": false}, "backendAddressPools": {"required": false}, "loadBalancingRules": {"required": false}, "probes": {"required": false}, "inboundNatRules": {"required": false}}, "nativeedge.types.azure.network.LoadBalancerProbeConfig": {"protocol": {"type": "string", "default": "Tcp", "required": true}, "port": {"type": "integer", "required": true}, "requestPath": {"type": "string", "required": false}, "intervalInSeconds": {"type": "integer", "default": 5, "required": true}, "numberOfProbes": {"type": "integer", "default": 16, "required": true}}, "nativeedge.types.azure.network.LoadBalancerIncomingNATRuleConfig": {"protocol": {"type": "string", "default": "Tcp", "required": true}, "frontendPort": {"type": "integer", "required": true}, "backendPort": {"type": "integer", "required": true}}, "nativeedge.types.azure.network.LoadBalancerRuleConfig": {"protocol": {"type": "string", "default": "Tcp", "required": true}, "frontendPort": {"type": "integer", "required": true}, "backendPort": {"type": "integer", "required": true}, "enableFloatingIP": {"type": "boolean", "required": false, "default": false}, "idleTimeoutInMinutes": {"type": "integer", "required": false, "default": 5}, "loadDistribution": {"type": "string", "required": false, "default": "Default"}}, "nativeedge.types.azure.compute.ManagedClusterConfig": {"location": {"type": "string", "default": ""}, "tags": {"description": "A dict containing resource tags\n", "default": {}}, "kubernetes_version": {"type": "string", "default": ""}, "dns_prefix": {"type": "string", "default": ""}, "agent_pool_profiles": {"description": "An array to pass an array of dict for agent profile\n", "default": []}, "linux_profile": {"description": "A dict to define linux profile with user name and public keys\n", "default": {}}, "network_profile": {"description": "A dict to define network profile loadbalancer,outbound,IPs\n", "default": {}}, "windows_profile": {"description": "A dict to define windows profile with user name and password\n", "default": {}}, "service_principal_profile": {"description": "A dict to define service service_principal_profile [client_id, secret]\n", "default": {}}, "addon_profiles": {"description": "A dict to define addons to the managed cluster\n", "default": {}}, "enable_rbac": {"type": "boolean", "default": true}}, "nativeedge.types.azure.CustomResource": {"custom_resource_module": {"type": "string", "required": true, "description": "The import path, for example, azure.mgmt.resource."}, "custom_resource_class_name": {"type": "string", "required": true, "description": "The class to import from the resource module, for example ResourceManagementClient."}, "custom_resource_object_name": {"type": "string", "required": true, "description": "The object where we find the functions for create, update, and delete, for example resource_groups."}, "create_fn_name": {"type": "string", "required": true, "description": "The function that is called for create, for example, create_or_update."}, "update_fn_name": {"type": "string", "required": true, "description": "The function that is called for update, for example, create_or_update."}, "delete_fn_name": {"type": "string", "required": true, "description": "The function that is called for create, for example, begin delete."}, "get_fn_name": {"type": "string", "required": true, "description": "The get function name.", "default": "get"}, "get_params": {"type": "dict", "required": true, "description": "The params for calling the get function."}}, "nativeedge.types.azure.CustomResourceOperationConfig": {"create": {"type": "dict", "required": true, "description": "A dict of keys and values, which will be sent to create_fn_name."}, "update": {"type": "dict", "required": false, "description": "A dict of keys and values, which will be sent to update_fn_name.", "default": {}}, "delete": {"type": "dict", "required": true, "description": "A dict of keys and values, which will be sent to delete_fn_name."}}, "nativeedge.types.helm.HelmConfig": {"executable_path": {"type": "string", "default": "", "required": false}}, "nativeedge.types.helm.ConfigurationVariant": {"blueprint_file_name": {"type": "string", "required": false}, "manager_file_path": {"type": "string", "required": false}, "file_content": {"required": false}, "api_options": {"type": "nativeedge.types.helm.ApiOptions", "required": false}}, "nativeedge.types.helm.ApiOptions": {"host": {"type": "string", "required": false}, "api_key": {"type": "string", "required": false}, "ssl_ca_cert": {"type": "string", "required": false}}, "nativeedge.types.helm.AuthenticationVariant": {"gcp_service_account": {"type": "string", "required": false}, "aws_access_key_id": {"type": "string", "required": false}, "aws_secret_access_key": {"type": "string", "required": false}, "aws_default_region": {"type": "string", "required": false}}, "nativeedge.types.helm.ClientConfig": {"configuration": {"type": "nativeedge.types.helm.ConfigurationVariant"}, "authentication": {"type": "nativeedge.types.helm.AuthenticationVariant", "required": false}}, "nativeedge.types.helm.ReleaseConfig": {"name": {"type": "string", "required": true}, "chart": {"type": "string", "required": true}, "values_file": {"type": "string", "required": false}, "set_values": {"default": []}, "flags": {"default": []}}, "nativeedge.types.helm.RepoConfig": {"name": {"type": "string", "required": true}, "repo_url": {"type": "string", "required": true}, "flags": {"default": []}}, "nativeedge.types.helm.RegistryConfig": {"host": {"type": "string", "required": false}, "ecr": {"type": "dict", "required": false, "default": {}}, "flags": {}}, "nativeedge.types.docker.DockerMachineConfig": {"docker_ip": {"description": "Docker Machine IP", "type": "string", "default": ""}, "docker_user": {"description": "Docker Machine User", "type": "string", "default": ""}, "docker_key": {"description": "Docker Machine Private Key", "type": "string", "default": ""}, "container_volume": {"description": "Docker Container volume_mapping", "type": "string", "default": ""}}, "nativeedge.types.docker.DockerInstallationConfig": {"install_url": {"description": "Docker Installation Link", "type": "string", "default": "https://get.docker.com"}, "install_script": {"description": "Docker Installation script", "type": "string", "default": "https://raw.githubusercontent.com/fusion-e/nativeedge-docker-plugin/main/ne_docker/resources/post-install.sh"}, "install_with_sudo": {"type": "boolean", "description": "use sudo to run", "default": true}, "offline_installation": {"type": "boolean", "description": "Install docker when the vm has no internet access", "default": false}, "package_tar_path": {"description": "Docker Installation Tar path (must be located on the on where docker installed)\nRequired when offline installation\n", "type": "string", "default": ""}, "post_install_script_path": {"description": "Docker Installation post script path\nRequired when offline installation\n", "type": "string", "default": ""}, "installation_dir": {"description": "Docker Installation path\nRequired when offline installation\n", "type": "string", "default": ""}}, "nativeedge.types.docker.ClientConfig": {"docker_host": {"description": "Docker Machine IP to connect to.", "type": "string", "default": ""}, "docker_rest_port": {"description": "Docker Machine rest port.", "type": "string", "default": ""}, "docker_sock_file": {"description": "if docker is local you can leverage the sock file. the default value would be /var/run/docker.sock\n", "type": "string", "default": ""}}, "nativeedge.types.docker.Image": {"image_content": {"description": "Docker image to build", "type": "string", "default": ""}, "tag": {"description": "Docker image tag", "type": "string", "default": ""}, "pull_image": {"type": "boolean", "description": "Pull image", "default": false}, "all_tags": {"type": "boolean", "description": "Pull all tags (only if pull_image is True)", "default": false}}, "nativeedge.types.docker.Container": {"image_tag": {"description": "Docker image tag to build container", "type": "string", "default": ""}, "container_args": {"description": "dict of arguments to pass to container when run check this URL for details: https://tinyurl.com/v8url54\n", "type": "dict", "default": {}}}, "nativeedge.types.docker.ContainerFiles": {"docker_machine": {"description": "Docker Machine IP,User,Private_key", "type": "nativeedge.types.docker.DockerMachineConfig", "default": {}}, "source": {"description": "Files location that will be mapped to container", "type": "string", "default": ""}, "destination": {"description": "Location to extract the files into, that will be mapped to container volume later\n", "type": "string", "default": ""}, "extra_files": {"description": "More files to add to source before it goes to destination", "type": "list", "default": []}, "ansible_sources": {"description": "special case for ansible sources", "type": "dict", "default": {}}, "terraform_sources": {"description": "special case for terraform sources", "type": "dict", "default": {}}}, "nativeedge.types.terraform.Backend": {"name": {"type": "string", "description": "Some name.", "required": false}, "options": {"description": "Should be a dictionary of key/values.", "required": false}}, "nativeedge.types.terraform.RootModule": {"source": {"type": "string", "description": "Path or URL to the ZIP file containing the Terraform project. If this is a path, then it must be relative to the blueprint's root.\n", "required": true}, "backend": {"type": "nativeedge.types.terraform.Backend", "description": "If a backend is not defined in source, and you want to use a specific backend, define that here.\n", "default": {}}, "variables": {"description": "A dictionary of variables.", "required": false, "default": {}}, "environment_variables": {"description": "A dictionary of environment variables.", "required": false, "default": {}}}, "nativeedge.types.vsphere.Config": {"username": {"description": "vSphere username.\n", "type": "string", "required": false}, "host": {"description": "vCenter hostname or IP address.\n", "type": "string", "required": false}, "password": {"description": "vCenter password.\n", "type": "string", "required": false}, "datacenter_name": {"description": "datacenter name.\n", "type": "string", "required": false}, "auto_placement": {"description": "Must be true if you are using clusters. Disabled `auto placement` is not recommended for a cluster. If `auto placement` set to false, plugin will provide recommendation to vsphere to place vm to selected host, vsphere can move vm to other host by internal logic.\n", "type": "string", "required": false}, "resource_pool_name": {"description": "Name of a resource pool. Defaults to Resources, which is a hidden resource pool on vSphere.\n", "type": "string", "required": false}, "port": {"description": "vCenter port for SDK.\n", "type": "integer", "required": false}, "allow_insecure": {"description": "Whether to allow insecure connections. Defaults to false, but this is not yet enforced on Python versions older than 2.7.9. Python versions pre-2.7.9 can only make insecure connections, which will fail in the next major version of this plugin unless this is set to false.\n", "type": "boolean", "required": false}, "certificate_path": {"description": "The path to the PEM encoded certificate for the vCenter. This will be used on Python 2.7.9 and above to verify the SSL connection. On older versions of python the connection will be insecure. It is not supported to set this while allow_insecure is set to 'true'.\n", "type": "string", "required": false}, "certificate_data": {"type": "string", "description": "The PEM encoded certificate for the vCenter.", "required": false}}, "nativeedge.types.vsphere.ServerProperties": {"memory": {"description": "Amount of RAM, in MB.\n", "type": "integer", "required": false}, "cpus": {"description": "Number of CPUs.\n", "type": "integer", "required": false}, "template": {"description": "Virtual machine template from which server will be spawned.\n", "type": "string", "required": false}, "name": {"description": "Server name. Will use node name if this is not set. Must consist of only ASCII letters, numbers, and hyphens. Will automatically convert underscores to hyphens.\n", "type": "string", "required": false}, "add_scale_suffix": {"description": "Whether or not to add a suffix to the server name. This setting is meaningful only when the name property is specified. It must be true - which is the default - if such a server is to be scaled to more than one instance.\n", "type": "boolean", "default": true}, "clone_vm": {"description": "Virtual machine from which server will be cloned.\n", "type": "string", "required": false}, "disk_provision_type": {"description": "disk provisioning type. it can be one of these values:\n  - thickLazyZeroed\n  - thickEagerZeroed\n  - thin\n", "type": "string", "required": false}, "disk_size": {"description": "Disk size in GBs.\n", "type": "integer", "required": false}, "cpu_hot_add": {"description": "control whether to have cpu_hot_add enabled or not.\n", "type": "boolean", "default": true}, "cpu_hot_remove": {"description": "control whether to have cpu_hot_remove enabled or not.\n", "type": "boolean", "default": true}, "memory_hot_add": {"description": "control whether to have memory_hot_add enabled or not.\n", "type": "boolean", "default": true}}, "nativeedge.types.vsphere.NetworkingProperties": {"domain": {"description": "the domain for this server. Combined with the hostname this will produce the fully-qualified domain name (e.g. if ``domain`` is ``example.local`` and the host name is ``test-abc123`` then the fully-qualified domain name will be ``test-abc123.example.local``)\n", "type": "string", "required": false}, "dns_servers": {"description": "List of DNS servers.\n", "required": false}, "connect_networks": {"description": "List of network interfaces to connect.\nThese should be in the form of dicts with:\nname: The name of the network on vsphere, or of the related node if from_relationship is true.\nfrom_relationship: true/false- determines whether to use a relationship from a connected node (default false)\nmanagement: true/false- determines if this is a management network interface (default false)\nexternal: true/false- determines if this is a external network interface (default false)\nswitch_distributed: determines if this is connected to a distributed port group (default false)\nnsx_t_switch: determines if this is connected to a NSX-T Logical Switch (default false)\nuse_dhcp: whether to use DHCP for IP addressing (default true)\nnetwork: network CIDR to use if use_dhcp is false\ngateway: default gateway to use if use_dhcp is false. You should only set this on one interface.\nip: IP address to use if use_dhcp is false\n", "required": false}}, "nativeedge.types.terraform.DirectoryConfig": {"executable_path": {"type": "string", "required": false}, "storage_path": {"type": "string", "required": false}, "plugins_dir": {"type": "string", "required": false}}, "nativeedge.types.terraform.InstallConfig": {"use_existing_resource": {"type": "boolean", "default": false}, "installation_source": {"type": "string", "default": "https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip"}, "plugins": {"default": {}}}, "nativeedge.types.terraform.Provider": {"filename": {"type": "string", "required": false, "default": "provider.tf"}, "providers": {"type": "list", "required": false}}, "nativeedge.types.terraform.RequiredProviders": {"filename": {"type": "string", "required": false, "default": "versions.tf.json"}, "required_providers": {"type": "dict", "required": false}}, "nativeedge.types.terraform.SourceSpecification": {"location": {"type": "string", "required": true}, "username": {"type": "string", "required": false}, "password": {"type": "string", "required": false}}, "nativeedge.types.terraform.tfsec": {"installation_source": {"type": "string", "required": false, "default": "https://github.com/aquasecurity/tfsec/releases/download/v1.1.3/tfsec-linux-amd64"}, "executable_path": {"type": "string", "required": false}, "config": {"required": false}, "flags_override": {"type": "list", "default": ["soft_fail"], "required": false}, "enable": {"type": "boolean", "default": false}}, "nativeedge.types.terraform.opa": {"installation_source": {"type": "string", "required": false, "default": "https://github.com/open-policy-agent/opa/releases/download/v0.47.4/opa_linux_amd64_static"}, "executable_path": {"type": "string", "required": false}, "config": {"required": false}, "policy_bundles": {"required": false}, "flags_override": {"type": "list", "required": false}, "enable": {"type": "boolean", "default": false}}, "nativeedge.types.terraform.tflint": {"installation_source": {"type": "string", "default": "https://github.com/terraform-linters/tflint/releases/download/v0.34.1/tflint_linux_amd64.zip", "required": false}, "executable_path": {"type": "string", "required": false}, "config": {"required": false}, "flags_override": {"type": "list", "default": [{"loglevel": "debug"}], "required": false}, "env": {"type": "dict", "required": false}, "enable": {"type": "boolean", "default": false}}, "nativeedge.types.terraform.terratag": {"installation_source": {"type": "string", "default": "https://github.com/env0/terratag/releases/download/v0.1.35/terratag_0.1.35_linux_amd64.tar.gz", "required": false}, "executable_path": {"type": "string", "required": false}, "tags": {"type": "dict", "required": false, "default": {}}, "flags_override": {"type": "list", "required": false}, "enable": {"type": "boolean", "default": false}}, "nativeedge.types.terraform.infracost": {"installation_source": {"type": "string", "default": "https://github.com/infracost/infracost/releases/download/v0.10.30/infracost-linux-amd64.tar.gz", "required": false}, "executable_path": {"type": "string", "required": false}, "api_key": {"type": "string", "default": ""}, "enable": {"type": "boolean", "default": false}}, "nativeedge.types.kubernetes.FileResource": {"resource_path": {"type": "string", "description": "File relative to blueprint path.", "required": false}, "target_path": {"type": "string", "description": "Do not use.", "required": false}, "template_variables": {"type": "dict", "required": false}}, "nativeedge.types.kubernetes.ApiOptions": {"host": {"type": "string", "required": false, "description": "HTTP/HTTPS URL to Kubernetes API\n"}, "ssl_ca_cert": {"description": "Either a path to a file or the content of a CA Cert file.", "type": "string", "required": false}, "cert_file": {"description": "Either a path to a file or the content of a Cert file.", "type": "string", "required": false}, "key_file": {"type": "string", "description": "Either a path to a file or the content of a key file.", "required": false}, "verify_ssl": {"type": "string", "required": false}, "api_key": {"type": "string", "required": false}, "debug": {"type": "boolean", "required": false}}, "nativeedge.types.kubernetes.ConfigurationVariant": {"blueprint_file_name": {"type": "string", "required": false, "description": "Name of Kubernetes configuration file attached to blueprint\n"}, "manager_file_path": {"type": "string", "required": false, "description": "Path to Kubernetes configuration file placed on Cloudify Manager VM\n"}, "file_content": {"required": false, "description": "Content (YAML) of Kubernetes configuration file\n"}, "api_options": {"type": "nativeedge.types.kubernetes.ApiOptions", "required": false, "description": "Set of basic properties describing Kubernetes API access\n"}}, "nativeedge.types.kubernetes.AuthenticationVariant": {"gcp_service_account": {"type": "string", "required": false, "description": "(JSON) Content of Google Cloud Platform Service Account file\n"}, "azure_service_account": {"type": "dict", "required": false, "description": "A dictionary containing all keys supported by the Azure plugin client_config property. In addition, the keys \"resource_group_name\" and \"cluster_name\" must be provided with values as well.\n"}}, "nativeedge.types.kubernetes.ClientConfig": {"configuration": {"type": "nativeedge.types.kubernetes.ConfigurationVariant", "required": false, "description": "Configuration properties of Kubernetes API. One of four configuration options can be used 1. Kubernetes config file contained by blueprint archive 2. Kubernetes config file previously uploaded into Cloudify Manager VM 3. Content of Kubernetes config file (YAML) 4. Kubernetes API set o properties\n"}, "authentication": {"type": "nativeedge.types.kubernetes.AuthenticationVariant", "required": false, "description": "Authentication properties of Kubernetes Cloud providers. Optional. Currently supported providers: Google Cloud Platform.\n"}, "host": {"type": "string", "required": false, "description": "This is either the IP or the routable hostname or fully qualified domain name of the Kubernetes API endpoint."}, "port": {"type": "integer", "required": false, "description": "The port that the Kubernetes API server is listening on."}, "ssl_ca_cert": {"type": "string", "required": false, "description": "PEM-encoded certificate authority certificate data."}, "verify_ssl": {"type": "string", "required": false, "description": "Either \"TLS\" or \"Token\". If providing TLS, then User Certificate and Private Key will be provided. If Token is selected, then Bearer Token will need to be provided."}, "key_file": {"type": "string", "required": false, "description": "If \"TLS\" is selected for authentication, this is the content of the PEM-encoded data from a client key file for TLS."}, "cert_file": {"type": "string", "required": false, "description": "If \"TLS\" is selected for authentication, this is the content of the PEM-encoded data from a client cert file for TLS."}, "token": {"type": "string", "required": false, "description": "If \"Token\" is selected for authentication, this is the content of the bearer token for authentication to the Kubernetes cluster."}}, "nativeedge.types.kubernetes.ApiMappingEntry": {"api": {"type": "string", "description": "Name of python Kubernetes API object which will be used to as request for particular operation type\n", "required": true}, "method": {"type": "string", "description": "Method name of python Kubernetes API object which will be used as request for particular operation type\n", "required": true}, "payload": {"type": "string", "description": "Name of python Kubernetes API object which will be used as request data for particular operation type\n", "required": false}}, "nativeedge.types.kubernetes.ApiMapping": {"create": {"type": "nativeedge.types.kubernetes.ApiMappingEntry", "description": "Python Kubernetes API objects and methods definitions for create operation\n"}, "read": {"type": "nativeedge.types.kubernetes.ApiMappingEntry", "description": "Python Kubernetes API objects and methods definitions for read operation\n"}, "update": {"type": "nativeedge.types.kubernetes.ApiMappingEntry", "description": "Python Kubernetes API objects and methods definitions for update operation\n"}, "delete": {"type": "nativeedge.types.kubernetes.ApiMappingEntry", "description": "Python Kubernetes API objects and methods definitions for delete operation\n"}}, "nativeedge.types.kubernetes.AbstractResource": {"apiVersion": {"type": "string", "description": "Kubernetes API version as a string\n", "default": "v1"}, "kind": {"type": "string", "required": false}, "metadata": {"description": "Metadata section related to single Kubernetes resource\n", "default": {}}}, "nativeedge.types.kubernetes.ResourceDefinition": {"apiVersion": {}, "kind": {}, "metadata": {}, "spec": {"description": "Kuberneres resource object specification\n", "default": {}}}, "nativeedge.types.kubernetes.RoleBindingDefinition": {"roleRef": {"description": "RoleRef can only reference a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.\n", "default": {}}, "subjects": {"description": "Subjects holds references to the objects the role applies to.\n", "default": []}}, "nativeedge.types.kubernetes.RoleDefinition": {"rules": {"description": "Rules holds all the PolicyRules for this Role.\n", "default": []}}, "nativeedge.types.kubernetes.ClusterRoleDefinition": null, "nativeedge.types.kubernetes.StorageClassResourceDefinition": {"parameters": {"required": false, "description": "Additional parameters for object creation\n"}, "provisioner": {"required": false, "description": "Class provisioner for object creation\n"}}, "nativeedge.types.kubernetes.ServiceAccountDefinition": {"automountServiceAccountToken": {"description": "AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted. Can be overridden at the pod level..\n", "type": "boolean", "default": false}, "imagePullSecrets": {"description": "ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet.\n", "default": []}, "secrets": {"description": "Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount.\n", "default": []}}, "nativeedge.types.kubernetes.SecretDefinition": {"type": {"description": "Used to facilitate programmatic handling of secret data.\n", "type": "string", "required": false}, "data": {"description": "Data contains the secret data.\n", "default": {}}, "stringData": {"description": "stringData allows specifying non-binary secret data in string form. It is provided as a write-only convenience method. All keys and values are merged into the data field on write, overwriting any existing values. It is never output when reading from the API..\n", "default": {}}}, "nativeedge.types.kubernetes.ConfigClassResourceDefinition": {"data": {"description": "Contains data to store in ConfigMap, Secret..\n", "default": {}}}, "nativeedge.types.kubernetes.Options": {"namespace": {"type": "string", "description": "The resource namespace.", "default": "default"}, "grace_period_seconds": {"type": "integer", "required": false}, "propagation_policy": {"type": "string", "required": false}}, "nativeedge.types.kubernetes.CustomObjectsOptions": {"namespace": {"type": "string", "description": "The resource namespace.", "default": "default"}, "group": {"type": "string", "description": "The custom object resource API group.", "required": true}, "plural": {"type": "string", "description": "The custom object resource API plural name.", "required": true}, "version": {"type": "string", "description": "The custom object resource API version.", "required": true}}, "nativeedge.types.kubernetes.Labels": {"user": {"type": "dict", "description": "These are labels defined by the user. The default is an empty dict, indicating no user labels.", "default": {}}, "system": {"type": "boolean", "description": "A boolean value to permit the NativeEdge system to add labels by default.  The labels are fusion-id for deployment ID and fusion-name for deployment name.\n", "default": true}}, "nativeedge.types.terragrunt.DirectoryConfig": {"executable_path": {"type": "string", "required": false}}, "nativeedge.types.terragrunt.InstallConfig": {"use_existing_resource": {"type": "boolean", "default": false}, "installation_source": {"type": "string", "default": "https://github.com/gruntwork-io/terragrunt/releases/download/v0.50.17/terragrunt_linux_amd64"}}, "nativeedge.types.terragrunt.SourceSpecification": {"location": {"type": "string", "required": true}, "username": {"type": "string", "required": false}, "password": {"type": "string", "required": false}}, "nativeedge.types.terragrunt.Stack": {"binary_path": {"type": "string", "required": false}, "terraform_binary_path": {"type": "string", "required": false}, "source": {"type": "nativeedge.types.terragrunt.SourceSpecification", "required": true}, "source_path": {"type": "string", "default": ""}, "variables": {"type": "dict", "default": {}}, "environment_variables": {"type": "dict", "default": {}}, "run_all": {"type": "boolean", "default": false}, "command_options": {"type": "dict", "default": {"all": ["--terragrunt-non-interactive", "--terragrunt-log-level", "debug"], "apply": ["-auto-approve"], "destroy": ["-auto-approve"], "plan": ["-json"], "output": ["-json"]}}, "masked_env_vars": {"type": "list", "default": ["AWS_SECRET_ACCESS_KEY", "AWS_ACCESS_KEY_ID", "AWS_DEFAULT_REGION"]}}, "nativeedge.types.openstack.logging.Groups": {"openstack": {"type": "string", "required": false}}, "nativeedge.types.openstack.Logging": {"use_cfy_logger": {"type": "boolean", "default": true}, "groups": {"type": "nativeedge.types.openstack.logging.Groups", "required": false}, "loggers": {"required": false}}, "nativeedge.types.openstack.ClientConfig": {"auth_url": {"type": "string", "required": false}, "username": {"type": "string", "required": false}, "password": {"type": "string", "required": false}, "project_name": {"type": "string", "required": false}, "tenant_name": {"type": "string", "required": false}, "region_name": {"type": "string", "required": false}, "user_domain_id": {"type": "string", "required": false}, "project_domain_id": {"type": "string", "required": false}, "user_domain_name": {"type": "string", "required": false}, "project_domain_name": {"type": "string", "required": false}, "logging": {"type": "nativeedge.types.openstack.Logging", "required": false}, "insecure": {"type": "boolean", "required": false, "default": false}, "ca_cert": {"type": "string", "required": false}, "kwargs": {"default": {}}}, "nativeedge.types.openstack.Network": {"kwargs": {"default": {}}, "name": {"type": "string", "required": false, "default": ""}, "id": {"type": "string", "required": false}, "admin_state_up": {"type": "boolean", "default": true}}, "nativeedge.types.openstack.Subnet": {"kwargs": {"default": {}}, "name": {"type": "string", "required": false, "default": ""}, "id": {"type": "string", "required": false}, "enable_dhcp": {"type": "boolean", "required": false}, "network_id": {"type": "string", "required": false}, "dns_nameservers": {"required": false}, "allocation_pools": {"required": false}, "host_routes": {"required": false}, "ip_version": {"type": "string", "required": false}, "gateway_ip": {"type": "string", "required": false}, "cidr": {"type": "string", "required": false}, "prefixlen": {"type": "integer", "required": false}, "ipv6_address_mode": {"type": "string", "required": false}, "ipv6_ra_mode": {"type": "string", "required": false}}, "nativeedge.types.openstack.Port": {"kwargs": {"default": {}}, "name": {"type": "string", "required": false, "default": ""}, "id": {"type": "string", "required": false}, "allowed_address_pairs": {"required": false, "default": []}, "device_id": {"type": "string", "required": false}, "device_owner": {"type": "string", "required": false}, "fixed_ips": {"required": false}, "network_id": {"type": "string", "required": false}, "security_groups": {"required": false}}, "nativeedge.types.openstack.SecurityGroup": {"kwargs": {"default": {}}, "name": {"type": "string", "required": false, "default": ""}, "id": {"type": "string", "required": false}, "description": {"type": "string", "required": false}}, "nativeedge.types.openstack.Router": {"kwargs": {"default": {}}, "name": {"type": "string", "required": false, "default": ""}, "id": {"type": "string", "required": false}}, "nativeedge.types.openstack.FloatingIP": {"kwargs": {"default": {}}, "description": {"type": "string", "required": false}, "id": {"type": "string", "required": false}, "floating_network_id": {"type": "string", "required": false}, "floating_network_name": {"type": "string", "required": false}, "fixed_ip_address": {"type": "string", "required": false}, "floating_ip_address": {"type": "string", "required": false}, "port_id": {"type": "string", "required": false}, "subnet_id": {"type": "string", "required": false}, "dns_domain": {"type": "string", "required": false}, "dns_name": {"type": "string", "required": false}}, "nativeedge.types.openstack.SecurityGroupRule": {"kwargs": {"default": {}}, "id": {"type": "string", "required": false}, "remote_group_id": {"type": "string", "required": false}, "protocol": {"type": "string", "required": false}, "direction": {"type": "string", "required": false}, "port_range_min": {"type": "integer", "required": false}, "port_range_max": {"type": "integer", "required": false}, "security_group_id": {"type": "string", "required": false}, "remote_ip_prefix": {"type": "string", "required": false}}, "nativeedge.types.openstack.RBACPolicy": {"id": {"type": "string", "required": false}, "target_tenant": {"type": "string", "required": false}, "object_type": {"type": "string", "required": false}, "object_id": {"type": "string", "required": false}, "action": {"type": "string", "required": false}}, "nativeedge.types.openstack.Server": {"kwargs": {"default": {}}, "name": {"type": "string", "required": false, "default": ""}, "id": {"type": "string", "required": false}, "description": {"type": "string", "required": false}, "image_id": {"required": false, "type": "string"}, "flavor_id": {"required": false, "type": "string"}, "availability_zone": {"required": false, "type": "string"}, "user_data": {"required": false, "type": "string"}, "metadata": {"required": false, "default": {}}, "security_groups": {"required": false, "default": []}, "networks": {"required": false, "default": []}, "key_name": {"required": false, "type": "string"}}, "nativeedge.types.openstack.HostAggregate": {"name": {"type": "string", "required": false, "default": ""}, "id": {"type": "string", "required": false}, "availability_zone": {"required": false, "type": "string"}}, "nativeedge.types.openstack.ServerGroup": {"kwargs": {"default": {}}, "name": {"type": "string", "required": false, "default": ""}, "id": {"type": "string", "required": false}, "policies": {"required": false}}, "nativeedge.types.openstack.KeyPair": {"kwargs": {"default": {}}, "name": {"type": "string", "required": false, "default": ""}, "id": {"type": "string", "required": false}, "public_key": {"required": false, "type": "string"}}, "nativeedge.types.openstack.Image": {"kwargs": {"default": {}}, "name": {"type": "string", "required": false, "default": ""}, "id": {"type": "string", "required": false}, "container_format": {"required": false, "type": "string"}, "disk_format": {"required": false, "type": "string"}, "tags": {"required": false, "default": []}}, "nativeedge.types.openstack.Flavor": {"kwargs": {"default": {}}, "name": {"type": "string", "required": false, "default": ""}, "id": {"type": "string", "required": false}, "ram": {"required": false, "type": "integer"}, "disk": {"required": false, "type": "integer"}, "vcpus": {"required": false, "type": "integer"}}, "nativeedge.types.openstack.User": {"kwargs": {"default": {}}, "name": {"type": "string", "required": false, "default": ""}, "id": {"type": "string", "required": false}, "default_project_id": {"required": false, "type": "string"}, "domain_id": {"required": false, "type": "string"}, "enabled": {"required": false, "type": "boolean"}, "password": {"required": false, "type": "string"}, "email": {"required": false, "type": "string"}}, "nativeedge.types.openstack.Group": {"kwargs": {"default": {}}, "name": {"type": "string", "required": false, "default": ""}, "id": {"type": "string", "required": false}, "description": {"type": "string", "required": false}, "domain_id": {"required": false, "type": "string"}}, "nativeedge.types.openstack.Role": {"kwargs": {"default": {}}, "name": {"type": "string", "required": false, "default": ""}, "id": {"type": "string", "required": false}, "description": {"type": "string", "required": false}, "domain_id": {"required": false, "type": "string"}}, "nativeedge.types.openstack.Project": {"kwargs": {"default": {}}, "name": {"type": "string", "required": false, "default": ""}, "id": {"type": "string", "required": false}, "description": {"type": "string", "required": false}, "is_domain": {"required": false, "type": "boolean"}, "domain_id": {"required": false, "type": "string"}, "parent_id": {"required": false, "type": "string"}, "tags": {"required": false, "default": []}}, "nativeedge.types.openstack.Volume": {"kwargs": {"default": {}}, "name": {"type": "string", "required": false, "default": ""}, "id": {"type": "string", "required": false}, "description": {"type": "string", "required": false}, "project_id": {"required": false, "type": "string"}, "size": {"required": false, "type": "integer"}, "availability_zone": {"required": false, "type": "string"}, "imageRef": {"required": false, "type": "string"}, "snapshot_id": {"required": false, "type": "string"}, "volume_type": {"required": false, "type": "string"}}, "nativeedge.types.openstack.VolumeType": {"kwargs": {"default": {}}, "name": {"type": "string", "required": false, "default": ""}, "id": {"type": "string", "required": false}, "description": {"type": "string", "required": false}, "project_id": {"required": false, "type": "string"}, "extra_specs": {"required": false, "default": {}}}, "nativeedge.types.openstack.ZoneType": {"kwargs": {"default": {}}, "name": {"type": "string", "required": false, "default": ""}, "description": {"type": "string", "required": false}, "ttl": {"required": false, "type": "integer"}, "email": {"required": true, "type": "string"}, "type": {"required": false, "type": "string"}, "masters": {"required": false, "type": "string"}, "attributes": {"required": false, "default": {}}}, "nativeedge.types.openstack.RecordSetType": {"kwargs": {"default": {}}, "name": {"type": "string", "required": false, "default": ""}, "description": {"type": "string", "required": false}, "ttl": {"required": false, "type": "integer"}, "zone_id": {"required": true, "type": "string"}, "type": {"required": false, "type": "string"}, "records": {"required": true, "default": []}}, "nativeedge.types.openstack.SharedFileSystem": {"kwargs": {"default": {}}, "name": {"type": "string", "required": false, "default": ""}, "id": {"type": "string", "required": false}, "description": {"type": "string", "required": false}, "size": {"type": "integer", "required": true}, "share_proto": {"type": "string", "required": true}, "share_type": {"type": "string", "required": false}, "volume_type": {"type": "string", "required": false}, "share_network": {"type": "string", "required": false}}, "nativeedge.types.openstack.NetworkShare": {"kwargs": {"default": {}}, "name": {"type": "string", "required": false, "default": ""}, "id": {"type": "string", "required": false}, "description": {"type": "string", "required": false}, "neutron_net_id": {"type": "string", "required": false}, "neutron_subnet_id": {"type": "string", "required": false}, "availability_zone": {"type": "string", "required": false}}, "nativeedge.datatypes.key": {"private_key_path": {"type": "string", "required": false}, "public_key_path": {"type": "string", "default": "~/.ssh/id_rsa.pub"}, "key_name": {"type": "string", "required": false}, "algorithm": {"type": "string", "default": "RSA"}, "bits": {"type": "integer", "default": 2048}, "comment": {"type": "string", "required": false}, "passphrase": {"type": "string", "required": false}, "openssh_format": {"type": "boolean", "required": false}, "unvalidated": {"description": "Unvalidated parameters.\n", "required": false}}, "nativeedge.datatypes.ftp_auth": {"user": {"description": "The login credentials for ftp server.\n", "default": ""}, "password": {"description": "optional, ftp password\n", "default": ""}, "ip": {"description": "optional, device ip\n", "default": ""}, "port": {"description": "optional, ftp port\n", "default": 21}, "ignore_host": {"description": "optional, ignore host in ftp response\n", "default": false}, "tls": {"description": "optional, use tls connection to ftp\n", "default": false}}, "nativeedge.datatypes.terminal_auth": {"user": {"description": "The login credentials for ssh server.\n", "default": ""}, "password": {"description": "optional, ssh password\n", "default": ""}, "ip": {"description": "optional, device ip\n", "default": ""}, "key_content": {"description": "optional, ssh user key\n", "default": ""}, "port": {"description": "optional, ssh port\n", "default": 22}, "store_logs": {"description": "optional, save communication logs\n", "default": false}, "promt_check": {"description": "optional, list of prompts accepted from device, default is \"#/$\"\n", "default": []}, "warnings": {"description": "optional, list of possible warnings without new line\n", "default": []}, "errors": {"description": "optional, list of possible errors without new line\n", "default": []}, "criticals": {"description": "optional, list of possible criticals without new line\n", "default": []}, "exit_command": {"description": "optional, command for close connection, default 'exit'\n", "default": "exit"}, "smart_device": {"description": "optional, use shell extension\n", "default": false}}, "nativeedge.datatypes.File": {"resource_path": {"type": "string", "description": "The path relative to the blueprint where the file is stored. Currently this must be packaged in the blueprint. An external URI is not valid.\n", "required": true}, "file_path": {"type": "string", "description": "The path on the machine where the file should be saved.\n", "required": true}, "owner": {"type": "string", "description": "The owner string, such as \"centos:wheel\"\n", "required": true}, "mode": {"type": "integer", "description": "The file permissions, such as 777. Must be provided as an integer. \"0777\" and 0777 are not valid. Only 777.\n", "required": true}, "template_variables": {"description": "Variables to render Jinja templates.\n", "required": false}, "use_sudo": {"type": "boolean", "description": "Whether or not to use sudo to move, rename, delete, chown, chmod, the file.\n", "default": false}, "allow_failure": {"type": "boolean", "description": "If the download fails, log the error and continue.\n", "default": false}}, "nativeedge.types.serverless.ServerlessConfig": {"executable_path": {"type": "string", "default": ""}}, "nativeedge.types.serverless.ClientConfig": {"provider": {"type": "string", "required": false}, "credentials": {"type": "dict", "required": false}}, "nativeedge.types.serverless.ServiceConfig": {"name": {"type": "string", "required": true}, "template": {"type": "string", "required": true}, "template_url": {"type": "string", "required": false}, "template_path": {"type": "string", "required": false}, "functions": {"type": "list", "required": true}, "env": {"type": "dict", "required": false}}, "nativeedge.types.serverless.FunctionConfig": {"name": {"type": "string", "required": true}, "handler": {"type": "string", "required": true}, "events": {"type": "list", "required": false}, "environment": {"type": "dict", "required": false}}, "nativeedge.datatypes.pool": {"name": {"required": false, "default": "", "description": "Pool name\n"}, "path": {"required": false, "default": "", "description": "Pool path\n"}, "capacity": {"required": false, "type": "integer", "description": "Storage size in GiB\n"}}, "nativeedge.datatypes.volume": {"name": {"required": false, "default": "", "description": "Volume name\n"}, "path": {"required": false, "default": "", "description": "Volume path\n"}, "pool": {"required": false, "type": "string", "description": "Parent pool\n"}, "capacity": {"required": false, "type": "integer", "description": "Volume size in GiB\n"}, "allocation": {"required": false, "default": 0, "type": "integer", "description": "Volume allocation size in MiB\n"}, "url": {"required": false, "default": "", "type": "string", "description": "Http(s) link to external disk image\n"}, "zero_wipe": {"required": false, "default": false, "type": "boolean", "description": "Volume allocation zero wipe\n"}}, "nativeedge.datatypes.iso9660": {"volume": {"required": false, "default": "", "description": "Volume name\n"}, "pool": {"required": false, "type": "string", "description": "Parent pool\n"}, "files": {"required": false, "description": "File list with content. (Key:value)\n"}}, "nativeedge.datatypes.network": {"name": {"required": false, "default": "", "description": "Network name\n"}, "dev": {"required": false, "default": "", "description": "Device name\n"}, "forwards": {"required": false, "default": [], "description": "Settings for network `forwards`.\n"}, "ips": {"required": false, "default": [], "description": "Settings for network `ips`.\n"}}, "nativeedge.datatypes.domain": {"name": {"required": false, "default": "", "description": "Domain name\n"}, "vcpu": {"required": false, "type": "integer", "description": "CPU count\n"}, "memory_size": {"required": false, "type": "integer", "description": "VM memory size in KiB\n"}, "memory_maxsize": {"required": false, "type": "integer", "description": "Recomended VM memory size in KiB for upgrade\n"}, "nvram": {"required": false, "type": "string", "description": "Path to nvram\n"}, "disks": {"required": false, "description": "List connected disks\n", "default": []}, "networks": {"required": false, "description": "List connected networks\n", "default": []}, "full_dump": {"default": false, "description": "Make full dump for backups with memory snapshot to dump file. On create/restore backup will be removed all snapshots in domain.\n"}, "wait_for_ip": {"default": true, "description": "Wait until we have some private ip on interfaces\n"}, "domain_type": {"description": "Type of virtualization\n", "default": "qemu"}, "devices": {"description": "List of devices to passthrough to guest as a dict in this format: for example: - type: serial\n  source_path: /dev/ttyS1\n  target_port: 1\n- type: usb\n  vendor_id: 0x1d6b\n  product_id: 0x0002\n- type: pci\n  bus: 0x01\n  slot: 0x00\n  function: 0x1\n- type: tpm\n  path: /dev/tpm0\n", "default": []}}}