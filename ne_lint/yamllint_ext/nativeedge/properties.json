{"nativeedge.nodes.aws.dynamodb.Table": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.dynamodb.Table.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.iam.Group": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.iam.Group.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.iam.AccessKey": {"properties": {"resource_config": {"type": "nativeedge.datatypes.aws.iam.AccessKey.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.iam.LoginProfile": {"properties": {"client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "resource_config": {"type": "nativeedge.datatypes.aws.iam.LoginProfile.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.iam.User": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.iam.User.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.iam.Role": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "policy_arns": {"type": "list", "default": []}, "resource_config": {"type": "nativeedge.datatypes.aws.iam.Role.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.iam.RolePolicy": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.iam.RolePolicy.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.iam.InstanceProfile": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.iam.InstanceProfile.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.iam.Policy": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.iam.Policy.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.lambda.Function": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.lambda.Function.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.lambda.Invoke": {"properties": {"resource_config": {"type": "nativeedge.datatypes.aws.lambda.Invoke.config", "required": false}, "resource_encoding": {"default": "utf-8"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.lambda.Permission": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.lambda.Permission.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.rds.Instance": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.rds.Instance.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.rds.InstanceReadReplica": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.rds.InstanceReadReplica.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.rds.SubnetGroup": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.rds.SubnetGroup.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.rds.OptionGroup": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.rds.OptionGroup.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.rds.Option": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.rds.Option.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.rds.ParameterGroup": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.rds.ParameterGroup.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.rds.Parameter": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.rds.Parameter.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.route53.HostedZone": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.route53.HostedZone.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.route53.RecordSet": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.route53.RecordSet.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.SQS.Queue": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.SQS.Queue.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.SNS.Topic": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.SNS.Topic.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.SNS.Subscription": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.SNS.Subscription.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.elb.LoadBalancer": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}, "resource_config": {"type": "nativeedge.datatypes.aws.elb.LoadBalancer.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.elb.Classic.LoadBalancer": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}, "resource_config": {"type": "nativeedge.datatypes.aws.elb.Classic.LoadBalancer.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.elb.Classic.HealthCheck": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}, "resource_config": {"type": "nativeedge.datatypes.aws.elb.Classic.HealthCheck.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.elb.Listener": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}, "resource_config": {"type": "nativeedge.datatypes.aws.elb.Listener.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.elb.Classic.Listener": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}, "resource_config": {"type": "nativeedge.datatypes.aws.elb.Classic.Listener.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.elb.Rule": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}, "resource_config": {"type": "nativeedge.datatypes.aws.elb.Rule.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.elb.TargetGroup": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}, "resource_config": {"type": "nativeedge.datatypes.aws.elb.TargetGroup.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.elb.Classic.Policy": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}, "resource_config": {"type": "nativeedge.datatypes.aws.elb.Classic.Policy.config", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.elb.Classic.Policy.Stickiness": {"properties": {"resource_config": {"type": "nativeedge.datatypes.aws.elb.Classic.Policy.config", "required": true}, "resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}}, "derived_from": "nativeedge.nodes.aws.elb.Classic.Policy"}, "nativeedge.nodes.aws.s3.BaseBucket": {"properties": {"resource_id": {"type": "string", "default": ""}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.s3.Bucket.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.s3.BaseBucketObject": {"properties": {"resource_id": {"type": "string", "default": ""}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.s3.BucketObject.config", "required": false}, "source_type": {"type": "string", "default": "local"}, "path": {"type": "string", "default": ""}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.s3.Bucket": {"properties": {"client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "resource_id": {"type": "string", "default": ""}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.s3.Bucket.config", "required": false}}, "derived_from": "nativeedge.nodes.aws.s3.BaseBucket"}, "nativeedge.nodes.aws.s3.BucketPolicy": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.s3.BucketPolicy.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.s3.BucketLifecycleConfiguration": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.s3.BucketLifecycleConfiguration.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.s3.BucketTagging": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.s3.BucketTagging.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.s3.BucketObject": {"properties": {"client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "resource_id": {"type": "string", "default": ""}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.s3.BucketObject.config", "required": false}, "source_type": {"type": "string", "default": "local"}, "path": {"type": "string", "default": ""}}, "derived_from": "nativeedge.nodes.aws.s3.BaseBucketObject"}, "nativeedge.nodes.aws.ec2.BaseType": {"properties": {"Tags": {"required": false}, "resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.ec2.Vpc": {"properties": {"resource_config": {"type": "nativeedge.datatypes.aws.ec2.Vpc.config", "required": false}, "Tags": {"required": false}, "resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}}, "derived_from": "nativeedge.nodes.aws.ec2.BaseType"}, "nativeedge.nodes.aws.ec2.VpcPeering": {"properties": {"resource_config": {"type": "nativeedge.datatypes.aws.ec2.VpcPeering.config", "required": false}, "Tags": {"required": false}, "resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}}, "derived_from": "nativeedge.nodes.aws.ec2.BaseType"}, "nativeedge.nodes.aws.ec2.VpcPeeringRequest": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.ec2.VpcPeeringRequest.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.ec2.VpcPeeringAcceptRequest": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.ec2.VpcPeeringRequest.config", "required": false}}, "derived_from": "nativeedge.nodes.aws.ec2.VpcPeeringRequest"}, "nativeedge.nodes.aws.ec2.VpcPeeringRejectRequest": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.ec2.VpcPeeringRequest.config", "required": false}}, "derived_from": "nativeedge.nodes.aws.ec2.VpcPeeringRequest"}, "nativeedge.nodes.aws.ec2.Subnet": {"properties": {"resource_config": {"type": "nativeedge.datatypes.aws.ec2.Subnet.config", "required": false}, "use_available_zones": {"type": "boolean", "required": false}, "Tags": {"required": false}, "resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}}, "derived_from": "nativeedge.nodes.aws.ec2.BaseType"}, "nativeedge.nodes.aws.ec2.SecurityGroup": {"properties": {"resource_config": {"type": "nativeedge.datatypes.aws.ec2.SecurityGroup.config", "required": false}, "Tags": {"required": false}, "resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}}, "derived_from": "nativeedge.nodes.aws.ec2.BaseType"}, "nativeedge.nodes.aws.ec2.SecurityGroupRuleIngress": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.ec2.SecurityGroupRules.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.ec2.SecurityGroupRuleEgress": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.ec2.SecurityGroupRules.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.ec2.NATGateway": {"properties": {"resource_config": {"type": "nativeedge.datatypes.aws.ec2.NATGateway.config", "required": false}, "Tags": {"required": false}, "resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}}, "derived_from": "nativeedge.nodes.aws.ec2.BaseType"}, "nativeedge.nodes.aws.ec2.Interface": {"properties": {"resource_config": {"type": "nativeedge.datatypes.aws.ec2.Interface.config", "required": false}, "Tags": {"required": false}, "resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}}, "derived_from": "nativeedge.nodes.aws.ec2.BaseType"}, "nativeedge.nodes.aws.ec2.Instances": {"properties": {"Tags": {"required": false}, "resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}, "resource_config": {"type": "nativeedge.datatypes.aws.ec2.Instances.config", "required": false}, "use_ipv6_ip": {"type": "boolean", "default": false}, "use_public_ip": {"type": "boolean", "default": false}, "use_password": {"type": "boolean", "default": false}}, "derived_from": "nativeedge.nodes.Compute"}, "nativeedge.nodes.aws.ec2.SpotInstances": {"properties": {"Tags": {"required": false}, "resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.ec2.SpotInstances.config", "required": false}}, "derived_from": "nativeedge.nodes.Compute"}, "nativeedge.nodes.aws.ec2.SpotFleetRequest": {"properties": {"resource_config": {"type": "nativeedge.datatypes.aws.ec2.SpotFleetRequest.config", "required": false}, "Tags": {"required": false}, "resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}}, "derived_from": "nativeedge.nodes.aws.ec2.BaseType"}, "nativeedge.nodes.aws.ec2.Keypair": {"properties": {"resource_config": {"type": "nativeedge.datatypes.aws.ec2.Keypair.config", "required": false}, "log_create_response": {"default": false}, "store_in_runtime_properties": {"default": false}, "create_secret": {"default": false}, "secret_name": {"required": false}, "update_existing_secret": {"default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}, "Tags": {"required": false}, "resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}}, "derived_from": "nativeedge.nodes.aws.ec2.BaseType"}, "nativeedge.nodes.aws.ec2.ElasticIP": {"properties": {"Tags": {"required": false}, "resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.ec2.ElasticIP.config", "required": false}, "use_unassociated_addresses": {"default": false}, "attach_existing_address": {"default": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.ec2.NetworkACL": {"properties": {"resource_config": {"type": "nativeedge.datatypes.aws.ec2.NetworkACL.config", "required": false}, "Tags": {"required": false}, "resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}}, "derived_from": "nativeedge.nodes.aws.ec2.BaseType"}, "nativeedge.nodes.aws.ec2.NetworkAclEntry": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.ec2.NetworkAclEntry.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.ec2.DHCPOptions": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.ec2.DHCPOptions.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.ec2.VPNGateway": {"properties": {"resource_config": {"type": "nativeedge.datatypes.aws.ec2.VPNGateway.config", "required": false}, "Tags": {"required": false}, "resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}}, "derived_from": "nativeedge.nodes.aws.ec2.BaseType"}, "nativeedge.nodes.aws.ec2.VPNConnection": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.ec2.VPNConnection.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.ec2.VPNConnectionRoute": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.ec2.VPNConnectionRoute.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.ec2.CustomerGateway": {"properties": {"resource_config": {"type": "nativeedge.datatypes.aws.ec2.CustomerGateway.config", "required": false}, "Tags": {"required": false}, "resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}}, "derived_from": "nativeedge.nodes.aws.ec2.BaseType"}, "nativeedge.nodes.aws.ec2.InternetGateway": {"properties": {"resource_config": {"type": "nativeedge.datatypes.aws.ec2.InternetGateway.config", "required": false}, "Tags": {"required": false}, "resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}}, "derived_from": "nativeedge.nodes.aws.ec2.BaseType"}, "nativeedge.nodes.aws.ec2.TransitGateway": {"properties": {"resource_config": {"type": "nativeedge.datatypes.aws.ec2.TransitGateway.config", "required": false}, "Tags": {"required": false}, "resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}}, "derived_from": "nativeedge.nodes.aws.ec2.BaseType"}, "nativeedge.nodes.aws.ec2.TransitGatewayRouteTable": {"properties": {"resource_config": {"type": "nativeedge.datatypes.aws.ec2.TransitGatewayRouteTable.config", "required": false}, "Tags": {"required": false}, "resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}}, "derived_from": "nativeedge.nodes.aws.ec2.BaseType"}, "nativeedge.nodes.aws.ec2.TransitGatewayRoute": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.ec2.TransitGatewayRoute.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.ec2.RouteTable": {"properties": {"resource_config": {"type": "nativeedge.datatypes.aws.ec2.RouteTable.config", "required": false}, "Tags": {"required": false}, "resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}}, "derived_from": "nativeedge.nodes.aws.ec2.BaseType"}, "nativeedge.nodes.aws.ec2.Route": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.ec2.Route.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.ec2.Image": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": true}, "resource_config": {"type": "nativeedge.datatypes.aws.ec2.Image.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.ec2.Tags": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.ec2.Tags.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.ec2.EBSVolume": {"properties": {"device_name": {"type": "string", "default": ""}, "resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.ec2.EBSVolume.config", "required": false}, "use_available_zones": {"type": "boolean", "required": false}, "Tags": {"required": false}, "nativeedge_tagging": {"type": "boolean", "default": true}}, "derived_from": "nativeedge.nodes.aws.ec2.BaseType"}, "nativeedge.nodes.aws.ec2.EBSAttachment": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.ec2.EBSAttachment.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.autoscaling.Group": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.autoscaling.Group.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.autoscaling.LaunchConfiguration": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.autoscaling.LaunchConfiguration.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.autoscaling.Policy": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.autoscaling.Policy.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.autoscaling.LifecycleHook": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.autoscaling.LifecycleHook.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.autoscaling.NotificationConfiguration": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.autoscaling.NotificationConfiguration.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.cloudwatch.Alarm": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.cloudwatch.Alarm.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.cloudwatch.Rule": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.cloudwatch.Rule.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.cloudwatch.Event": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.cloudwatch.Event.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.cloudwatch.Target": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.cloudwatch.Target.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.efs.FileSystem": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.efs.FileSystem.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.efs.MountTarget": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.efs.MountTarget.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.efs.FileSystemTags": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.efs.FileSystemTags.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.kms.CustomerMasterKey": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.kms.CustomerMasterKey.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.kms.Alias": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.kms.Alias.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.kms.Grant": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.kms.Grant.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.CloudFormation.Stack": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.CloudFormation.Stack.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.ecs.Cluster": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.ECS.Cluster.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.ecs.Service": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.ECS.Service.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.ecs.TaskDefinition": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.ECS.TaskDefinition.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.swift.s3.Bucket": {"properties": {"swift_config": {"type": "nativeedge.datatypes.swift.Connection", "required": true}, "resource_id": {"type": "string", "default": ""}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.s3.Bucket.config", "required": false}}, "derived_from": "nativeedge.nodes.aws.s3.BaseBucket"}, "nativeedge.nodes.swift.s3.BucketObject": {"properties": {"swift_config": {"type": "nativeedge.datatypes.swift.Connection", "required": true}, "resource_id": {"type": "string", "default": ""}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.s3.BucketObject.config", "required": false}, "source_type": {"type": "string", "default": "local"}, "path": {"type": "string", "default": ""}}, "derived_from": "nativeedge.nodes.aws.s3.BaseBucketObject"}, "nativeedge.nodes.aws.eks.Cluster": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}, "resource_config": {"type": "nativeedge.datatypes.aws.EKS.Cluster.config", "required": false}, "store_kube_config_in_runtime": {"type": "boolean", "default": true, "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.eks.NodeGroup": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "nativeedge_tagging": {"type": "boolean", "default": true}, "resource_config": {"type": "nativeedge.datatypes.aws.EKS.NodeGroup.config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.codepipeline.Pipeline": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.codepipeline.Pipeline.config"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.cognitoidp.UserPool": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.cognitoidp.UserPool.config"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.cognitoidp.UserPoolClient": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.cognitoidp.UserPoolClient.config"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.cognitoidp.IdentityProvider": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.cognitoidp.IdentityProvider.config"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.cognito.IdentityPool": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.cognito.IdentityPool.config"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.ecr.AuthenticationToken": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.ecr.AuthenticationToken.config"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.aws.ecr.Repository": {"properties": {"resource_id": {"type": "string", "default": ""}, "client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.datatypes.aws.ecr.Repository.config"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.resources.AmazonWebServices": {"properties": {"client_config": {"type": "nativeedge.datatypes.aws.ConnectionConfig", "required": false}, "regions": {"type": "list", "default": []}, "resource_config": {"type": "dict", "default": {"resource_types": ["AWS::EKS::CLUSTER"]}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.ResourceGroup": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "api_version": {"type": "string", "description": "Resources API Version\n", "default": "2017-05-10"}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "tags": {"description": "Specifies a dictionary of one or more name and value pairs that describe a tag\n", "required": false}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.storage.StorageAccount": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "api_version": {"type": "string", "description": "Storage API Version\n", "default": "2015-06-15"}, "resource_group_name": {"type": "string", "description": "Name of the Resource Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Resource Group node)\n", "required": false}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "tags": {"description": "Specifies a dictionary of one or more name and value pairs that describe a tag\n", "required": false}, "sku": {"description": "A Storage account SKU if needed.\n", "required": false}, "resource_config": {"description": "A dictionary of values to pass as properties when creating the resource\n", "type": "nativeedge.types.azure.storage.StorageAccountConfig", "required": true}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.storage.DataDisk": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}, "resource_config": {"description": "A dictionary of values to pass as properties when creating the resource\n", "type": "nativeedge.types.azure.storage.DataDiskConfig", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.storage.FileShare": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "storage_account_name": {"type": "string", "description": "Name of the storage account that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a storage account node)\n", "required": false}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}, "resource_config": {"description": "A dictionary of values to pass as properties when creating the resource\n", "type": "nativeedge.types.azure.storage.FileShareConfig", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.network.VirtualNetwork": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "api_version": {"type": "string", "description": "Network API Version\n", "default": "2016-09-01"}, "resource_group_name": {"type": "string", "description": "Name of the Resource Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Resource Group node)\n", "required": false}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "tags": {"description": "Specifies a dictionary of one or more name and value pairs that describe a tag\n", "required": false}, "resource_config": {"description": "A dictionary of values to pass as properties when creating the resource\n", "type": "nativeedge.types.azure.network.VirtualNetworkConfig", "required": false}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.network.NetworkSecurityGroup": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "api_version": {"type": "string", "description": "Network API Version\n", "default": "2016-09-01"}, "resource_group_name": {"type": "string", "description": "Name of the Resource Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Resource Group node)\n", "required": false}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "tags": {"description": "Specifies a dictionary of one or more name and value pairs that describe a tag\n", "required": false}, "resource_config": {"description": "A dictionary of values to pass as properties when creating the resource\n", "type": "nativeedge.types.azure.network.NetworkSecurityGroupConfig", "required": false}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.network.NetworkSecurityRule": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "api_version": {"type": "string", "description": "Network API Version\n", "default": "2016-09-01"}, "resource_group_name": {"type": "string", "description": "Name of the Resource Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Resource Group node)\n", "required": false}, "network_security_group_name": {"type": "string", "description": "Name of the Network Security Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Network Security Groupnode)\n", "required": false}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "tags": {"description": "Specifies a dictionary of one or more name and value pairs that describe a tag\n", "required": false}, "resource_config": {"description": "A dictionary of values to pass as properties when creating the resource\n", "type": "nativeedge.types.azure.network.NetworkSecurityRuleConfig", "required": false}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.network.Subnet": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "api_version": {"type": "string", "description": "Network API Version\n", "default": "2016-09-01"}, "resource_group_name": {"type": "string", "description": "Name of the Resource Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Resource Group node)\n", "required": false}, "virtual_network_name": {"type": "string", "description": "Name of the Virtual Network that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Virtual Network node)\n", "required": false}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "tags": {"description": "Specifies a dictionary of one or more name and value pairs that describe a tag\n", "required": false}, "resource_config": {"description": "A dictionary of values to pass as properties when creating the resource\n", "type": "nativeedge.types.azure.network.SubnetConfig", "required": false}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.network.RouteTable": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "api_version": {"type": "string", "description": "Network API Version\n", "default": "2016-09-01"}, "resource_group_name": {"type": "string", "description": "Name of the Resource Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Resource Group node)\n", "required": false}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "tags": {"description": "Specifies a dictionary of one or more name and value pairs that describe a tag\n", "required": false}, "resource_config": {"description": "A dictionary of values to pass as properties when creating the resource\n", "type": "nativeedge.types.azure.network.RouteTableConfig", "required": false}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.network.Route": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "api_version": {"type": "string", "description": "Network API Version\n", "default": "2016-09-01"}, "resource_group_name": {"type": "string", "description": "Name of the Resource Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Resource Group node)\n", "required": false}, "route_table_name": {"type": "string", "description": "Name of the Network Security Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Virtual Network node)\n", "required": false}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "tags": {"description": "Specifies a dictionary of one or more name and value pairs that describe a tag\n", "required": false}, "resource_config": {"description": "A dictionary of values to pass as properties when creating the resource\n", "type": "nativeedge.types.azure.network.RouteConfig", "required": false}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.network.NetworkInterfaceCard": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "api_version": {"type": "string", "description": "Network API Version\n", "default": "2016-09-01"}, "resource_group_name": {"type": "string", "description": "Name of the Resource Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Resource Group node)\n", "required": false}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "tags": {"description": "Specifies a dictionary of one or more name and value pairs that describe a tag\n", "required": false}, "primary": {"description": "When using multiple Network Interfaces, a primary must be set\n", "required": false, "default": false}, "resource_config": {"description": "A dictionary of values to pass as properties when creating the resource\n", "type": "nativeedge.types.azure.network.NetworkInterfaceCardConfig", "required": false}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.network.IPConfiguration": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "api_version": {"type": "string", "description": "Network API Version\n", "default": "2016-09-01"}, "resource_group_name": {"type": "string", "description": "Name of the Resource Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Resource Group node)\n", "required": false}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "tags": {"description": "Specifies a dictionary of one or more name and value pairs that describe a tag\n", "required": false}, "resource_config": {"description": "A dictionary of values to pass as properties when creating the resource\n", "type": "nativeedge.types.azure.network.IPConfigurationConfig", "required": true}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.network.PublicIPAddress": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "api_version": {"type": "string", "description": "Network API Version\n", "default": "2016-09-01"}, "resource_group_name": {"type": "string", "description": "Name of the Resource Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Resource Group node)\n", "required": false}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "tags": {"description": "Specifies a dictionary of one or more name and value pairs that describe a tag\n", "required": false}, "resource_config": {"description": "A dictionary of values to pass as properties when creating the resource\n", "type": "nativeedge.types.azure.network.PublicIPAddressConfig", "required": false}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.compute.AvailabilitySet": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "api_version": {"type": "string", "description": "Compute API Version\n", "default": "2016-03-30"}, "resource_group_name": {"type": "string", "description": "Name of the Resource Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Resource Group node)\n", "required": false}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "tags": {"description": "Specifies a dictionary of one or more name and value pairs that describe a tag\n", "required": false}, "resource_config": {"description": "A dictionary of values to pass as properties when creating the resource\n", "type": "nativeedge.types.azure.compute.AvailabilitySetConfig", "required": true}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.compute.VirtualMachine": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "api_version": {"type": "string", "description": "Compute API Version\n", "default": "2017-03-30"}, "resource_group_name": {"type": "string", "description": "Name of the Resource Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Resource Group node)\n", "required": false}, "use_public_ip": {"type": "boolean", "description": "Tells the deployment to use the public IP (if available) of the resource for NativeEdge Agent connections\n", "default": false}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "tags": {"description": "Specifies a dictionary of one or more name and value pairs that describe a tag\n", "required": false}, "plan": {"description": "Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images.\n", "required": false}, "resource_config": {"description": "A dictionary of values to pass as properties when creating the resource\n", "type": "nativeedge.types.azure.compute.VirtualMachineConfig", "required": true}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}, "ip": {"description": "Property specifying the IP address of the resource to\nuse for the agent installer.\n", "type": "string", "required": false}, "os_family": {"description": "Property specifying what type of operating system family\nthis compute node will run.\n", "default": "linux"}, "agent_config": {"type": "nativeedge.datatypes.AgentConfig", "default": {"install_method": "remote", "port": 22}}, "storage_endpoint": {"type": "string", "description": "This is the suffix for the storage endpoint. Supported values are core.windows.net or local.azurestack.external.", "default": "core.windows.net"}}, "derived_from": "nativeedge.nodes.Compute"}, "nativeedge.nodes.azure.compute.WindowsVirtualMachine": {"properties": {"os_family": {"description": "Property specifying what type of operating system family\nthis compute node will run.\n", "default": "linux"}, "agent_config": {"type": "nativeedge.datatypes.AgentConfig", "default": {"install_method": "remote", "port": 22}}, "use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "api_version": {"type": "string", "description": "Compute API Version\n", "default": "2017-03-30"}, "resource_group_name": {"type": "string", "description": "Name of the Resource Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Resource Group node)\n", "required": false}, "use_public_ip": {"type": "boolean", "description": "Tells the deployment to use the public IP (if available) of the resource for NativeEdge Agent connections\n", "default": false}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "tags": {"description": "Specifies a dictionary of one or more name and value pairs that describe a tag\n", "required": false}, "plan": {"description": "Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images.\n", "required": false}, "resource_config": {"description": "A dictionary of values to pass as properties when creating the resource\n", "type": "nativeedge.types.azure.compute.VirtualMachineConfig", "required": true}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}, "ip": {"description": "Property specifying the IP address of the resource to\nuse for the agent installer.\n", "type": "string", "required": false}, "storage_endpoint": {"type": "string", "description": "This is the suffix for the storage endpoint. Supported values are core.windows.net or local.azurestack.external.", "default": "core.windows.net"}}, "derived_from": "nativeedge.nodes.azure.compute.VirtualMachine"}, "nativeedge.nodes.azure.compute.VirtualMachineExtension": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "api_version": {"type": "string", "description": "Compute API Version\n", "default": "2016-03-30"}, "resource_group_name": {"type": "string", "description": "Name of the Resource Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Resource Group node)\n", "required": false}, "virtual_machine_name": {"type": "string", "description": "Name of the Virtual Machine that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Virtual Machine node)\n", "required": false}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "tags": {"description": "Specifies a dictionary of one or more name and value pairs that describe a tag\n", "required": false}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.network.LoadBalancer": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "api_version": {"type": "string", "description": "Network API Version\n", "default": "2016-09-01"}, "resource_group_name": {"type": "string", "description": "Name of the Resource Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Resource Group node)\n", "required": false}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "tags": {"description": "Specifies a dictionary of one or more name and value pairs that describe a tag\n", "required": false}, "resource_config": {"description": "A dictionary of values to pass as properties when creating the resource\n", "type": "nativeedge.types.azure.network.LoadBalancerConfig", "required": false}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.network.LoadBalancer.BackendAddressPool": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "api_version": {"type": "string", "description": "Network API Version\n", "default": "2016-09-01"}, "resource_group_name": {"type": "string", "description": "Name of the Resource Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Resource Group node)\n", "required": false}, "load_balancer_name": {"type": "string", "required": false}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "tags": {"description": "Specifies a dictionary of one or more name and value pairs that describe a tag\n", "required": false}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.network.LoadBalancer.Probe": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "api_version": {"type": "string", "description": "Network API Version\n", "default": "2016-09-01"}, "resource_group_name": {"type": "string", "description": "Name of the Resource Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Resource Group node)\n", "required": false}, "load_balancer_name": {"type": "string", "required": false}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "tags": {"description": "Specifies a dictionary of one or more name and value pairs that describe a tag\n", "required": false}, "resource_config": {"description": "A dictionary of values to pass as properties when creating the resource\n", "type": "nativeedge.types.azure.network.LoadBalancerProbeConfig", "required": false}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.network.LoadBalancer.IncomingNATRule": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "api_version": {"type": "string", "description": "Network API Version\n", "default": "2016-09-01"}, "resource_group_name": {"type": "string", "description": "Name of the Resource Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Resource Group node)\n", "required": false}, "load_balancer_name": {"type": "string", "required": false}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "tags": {"description": "Specifies a dictionary of one or more name and value pairs that describe a tag\n", "required": false}, "resource_config": {"description": "A dictionary of values to pass as properties when creating the resource\n", "type": "nativeedge.types.azure.network.LoadBalancerIncomingNATRuleConfig", "required": false}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.network.LoadBalancer.Rule": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "api_version": {"type": "string", "description": "Network API Version\n", "default": "2016-09-01", "required": false}, "resource_group_name": {"type": "string", "description": "Name of the Resource Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Resource Group node)\n", "required": false}, "load_balancer_name": {"type": "string", "required": false}, "location": {"type": "string", "description": "Specifies the supported Azure location for the resource\n", "required": false}, "tags": {"description": "Specifies a dictionary of one or more name and value pairs that describe a tag\n", "required": false}, "resource_config": {"description": "A dictionary of values to pass as properties when creating the resource\n", "type": "nativeedge.types.azure.network.LoadBalancerRuleConfig", "required": false}, "retry_after": {"description": "Overrides the Azure-specified \"retry_after\" response. This property will set the number of seconds for each task retry interval (in the case of iteratively checking the status of an asynchronous operation)\n", "type": "integer", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.Deployment": {"properties": {"name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": true}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": true}, "resource_group_name": {"type": "string", "description": "Name of the Resource Group that the existing resource belongs to (this is only useful when not using a relationship between a resource node and a Resource Group node)\n", "default": {"get_property": ["SELF", "name"]}, "required": false}, "location": {"required": true, "type": "string"}, "template_file": {"type": "string", "required": false, "description": "Path or URL to template file. Ignored if `template` is specified.\n"}, "template": {"required": false, "description": "Deployment template. Can be either a string (which will be parsed as JSON) or a dict (which will be passed as-is to the Azure SDK).\n"}, "params": {"description": "Deployment params\n", "required": false, "default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.compute.ContainerService": {"properties": {"name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "resource_group": {"required": true, "type": "string"}, "container_service_config": {"type": "string", "required": false, "description": "Container service config details\n"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.Plan": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "resource_group": {"required": true, "type": "string"}, "plan_details": {"required": false, "description": "Plan details, including location, SKU, kind etc. https://docs.microsoft.com/en-us/python/api/azure-mgmt-web/azure.mgmt.web.v2019_08_01.models.appserviceplan?view=azure-python\n"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.WebApp": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "name": {"type": "string", "description": "Name for the resource. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n", "required": false}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}, "resource_group": {"required": true, "type": "string"}, "app_config": {"type": "string", "required": false, "description": "App config details, including location and plan\n"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.PublishingUser": {"properties": {"user_details": {"required": true, "description": "User details including location, name, kind, user_name,...\n"}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.compute.ManagedCluster": {"properties": {"use_external_resource": {"description": "Indicate whether the resource exists or if NativeEdge should create the resource\n", "type": "boolean", "default": false, "required": true}, "create_if_missing": {"description": "If use_external_resource is true and the resource does not exist, create it.\n", "type": "boolean", "required": true, "default": false}, "use_if_exists": {"description": "If use_external_resource is false, but the resource does exist, use it.", "type": "boolean", "required": true, "default": false}, "resource_group": {"required": true, "type": "string"}, "name": {"required": true, "type": "string", "default": {"get_property": ["SELF", "cluster_name"]}}, "cluster_name": {"required": false, "type": "string"}, "resource_config": {"type": "nativeedge.types.azure.compute.ManagedClusterConfig", "required": true, "description": "Managed Cluster config details, including location, profiles\n"}, "store_kube_config_in_runtime": {"type": "boolean", "default": true, "required": true, "description": "it will store the kubernetes configuration into a runtime property ['kubeconf'] to use later to interact with the cluster\n"}, "client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API\n", "type": "nativeedge.datatypes.azure.Config", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.resources.Azure": {"properties": {"client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API", "type": "nativeedge.datatypes.azure.Config", "required": false}, "locations": {"type": "list", "default": []}, "resource_config": {"type": "dict", "default": {"resource_types": ["Microsoft.ContainerService/ManagedClusters"]}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.azure.CustomTypes": {"properties": {"client_config": {"description": "A dictionary of values to pass to authenticate with the Azure API", "type": "nativeedge.datatypes.azure.Config", "required": false}, "location": {"type": "string", "default": ""}, "api_version": {"type": "string", "required": false}, "resource_config": {"type": "nativeedge.types.azure.CustomResource", "description": "A dict describing the custom resource.", "required": true}, "operation_config": {"type": "nativeedge.types.azure.CustomResourceOperationConfig", "description": "A dict describing the function parameters for create, update, and delete.", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.project": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "default": ""}, "project_id": {"type": "string", "default": ""}, "parent": {"type": "dict"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.PolicyBinding": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "resource": {"type": "string", "default": ""}, "policy": {"type": "string", "default": ""}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.Instance": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "use_public_ip": {"type": "boolean", "default": false}, "image_id": {"type": "string", "default": {}}, "instance_type": {"type": "string", "default": "n1-standard-1"}, "name": {"type": "string", "default": ""}, "zone": {"type": "string", "default": ""}, "tags": {"type": "string", "default": ""}, "block_project_ssh_keys": {"type": "boolean", "default": false}, "can_ip_forward": {"type": "boolean", "default": false}, "scopes": {"default": []}, "startup_script": {"default": ""}, "external_ip": {"type": "boolean", "default": false}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.Compute"}, "nativeedge.nodes.gcp.InstanceGroup": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "default": ""}, "named_ports": {"default": []}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.Volume": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "image": {"default": ""}, "name": {"type": "string", "default": ""}, "size": {"type": "integer", "default": 10}, "boot": {"type": "boolean", "default": false}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.Volume"}, "nativeedge.nodes.gcp.Snapshot": {"properties": {"gcp_config": {"default": {}}, "client_config": {"default": {}}, "disk_name": {"type": "string", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.Network": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"default": ""}, "auto_subnets": {"default": true}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.Network"}, "nativeedge.nodes.gcp.SubNetwork": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"default": ""}, "region": {"type": "string", "default": ""}, "subnet": {"type": "string", "default": ""}}, "derived_from": "nativeedge.nodes.Subnet"}, "nativeedge.nodes.gcp.VPCNetworkPeering": {"properties": {"gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"default": ""}, "network": {"default": ""}, "peerNetwork": {"default": ""}, "autoCreateRoutes": {"default": true}}, "derived_from": "nativeedge.nodes.Network"}, "nativeedge.nodes.gcp.Route": {"properties": {"gcp_config": {"default": {}}, "client_config": {"default": {}}, "dest_range": {}, "name": {"default": ""}, "tags": {"default": []}, "next_hop": {"default": ""}, "priority": {"default": 1000}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.Router"}, "nativeedge.nodes.gcp.FirewallRule": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"default": ""}, "allowed": {}, "sources": {}, "target_tags": {"default": []}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.SecurityGroup": {"properties": {"gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"default": ""}, "rules": {"default": []}}, "derived_from": "nativeedge.nodes.SecurityGroup"}, "nativeedge.nodes.gcp.Access": {"properties": {"gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {}, "interface": {}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.KeyPair": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "private_key_path": {"type": "string", "default": ""}, "public_key_path": {"type": "string", "default": ""}, "user": {"type": "string", "default": ""}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.ExternalIP": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "ip_address": {"type": "string", "default": ""}}, "derived_from": "nativeedge.nodes.VirtualIP"}, "nativeedge.nodes.gcp.GlobalAddress": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "default": ""}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.VirtualIP"}, "nativeedge.nodes.gcp.StaticIP": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "default": ""}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.gcp.GlobalAddress"}, "nativeedge.nodes.gcp.Address": {"properties": {"gcp_config": {"default": {}}, "client_config": {"default": {}}, "region": {"default": ""}, "use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "name": {"type": "string", "default": ""}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.gcp.GlobalAddress"}, "nativeedge.nodes.gcp.Image": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "image_name": {"default": ""}, "image_path": {"default": ""}, "family": {"default": ""}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.HealthCheck": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "default": ""}, "health_check_type": {"type": "string", "default": "http"}, "port": {"default": 80}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.BackendService": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "default": ""}, "health_check": {"type": "string", "default": ""}, "protocol": {"default": "HTTP"}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.RegionBackendService": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "default": ""}, "region": {"type": "string", "default": ""}, "health_check": {"type": "string", "default": ""}, "protocol": {"default": "HTTP"}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.UrlMap": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "default": ""}, "default_service": {"type": "string", "default": ""}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.TargetProxy": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "default": ""}, "target_proxy_type": {"type": "string", "default": "http"}, "url_map": {"type": "string", "default": ""}, "ssl_certificate": {"type": "string", "default": ""}, "service": {"default": ""}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.SslCertificate": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "default": ""}, "private_key": {"default": {}}, "certificate": {"default": {}}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.ForwardingRule": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "default": ""}, "region": {"type": "string", "default": ""}, "scheme": {"type": "string", "default": "EXTERNAL"}, "ports": {"default": []}, "network": {"default": ""}, "subnet": {"default": ""}, "backend_service": {"default": ""}, "target_proxy": {"type": "string", "default": ""}, "port_range": {"type": "string", "default": ""}, "ip_address": {"type": "string", "default": ""}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.GlobalForwardingRule": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "default": ""}, "target_proxy": {"type": "string", "default": ""}, "port_range": {"type": "string", "default": "80"}, "ip_address": {"type": "string", "default": ""}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.DNSZone": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "default": ""}, "dns_name": {"type": "string", "default": ""}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.DNSRecord": {"properties": {"gcp_config": {"default": {}}, "client_config": {"default": {}}, "type": {"type": "string", "default": "A"}, "name": {"type": "string", "default": ""}, "resources": {"default": []}, "ttl": {"type": "integer", "default": 86400}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.DNSAAAARecord": {"properties": {"type": {"type": "string", "default": "A"}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "default": ""}, "resources": {"default": []}, "ttl": {"type": "integer", "default": 86400}}, "derived_from": "nativeedge.nodes.gcp.DNSRecord"}, "nativeedge.nodes.gcp.DNSMXRecord": {"properties": {"type": {"type": "string", "default": "A"}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "default": ""}, "resources": {"default": []}, "ttl": {"type": "integer", "default": 86400}}, "derived_from": "nativeedge.nodes.gcp.DNSRecord"}, "nativeedge.nodes.gcp.DNSNSRecord": {"properties": {"type": {"type": "string", "default": "A"}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "default": ""}, "resources": {"default": []}, "ttl": {"type": "integer", "default": 86400}}, "derived_from": "nativeedge.nodes.gcp.DNSRecord"}, "nativeedge.nodes.gcp.DNSTXTRecord": {"properties": {"type": {"type": "string", "default": "A"}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "default": ""}, "resources": {"default": []}, "ttl": {"type": "integer", "default": 86400}}, "derived_from": "nativeedge.nodes.gcp.DNSRecord"}, "nativeedge.nodes.gcp.KubernetesCluster": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "default": ""}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.KubernetesNodePool": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "default": ""}, "cluster_id": {"type": "string", "required": true}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.KubernetesClusterMonitoring": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "monitoring_service": {"type": "string", "default": "none"}, "cluster_id": {"type": "string", "required": true}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.KubernetesClusterlegacyAbac": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "enabled": {"type": "boolean", "default": false}, "cluster_id": {"type": "string", "required": true}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.KubernetesClusterNetworkPolicy": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "network_policy_config": {"required": true}, "cluster_id": {"type": "string", "required": true}, "additional_settings": {"default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.Topic": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.TopicPolicy": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "policy": {"default": {}}, "topic": {"type": "string", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.TopicMessage": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "messages": {"default": [], "required": true}, "topic": {"type": "string", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.Subscription": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "default": ""}, "topic": {"type": "string", "required": true}, "push_config": {"default": {}}, "ack_deadline_seconds": {}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.SubscriptionPolicy": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "policy": {"default": {}}, "subscription": {"type": "string", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.Acknowledge": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "subscription": {"type": "string", "default": ""}, "ack_ids": {"default": [], "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.PullRequest": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "subscription": {"type": "string", "default": ""}, "return_immediately": {"type": "boolean", "default": false}, "max_messages": {"type": "integer", "default": 1}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.StackDriverGroup": {"properties": {"gcp_config": {"default": {}}, "client_config": {"default": {}}, "project_id": {"type": "string"}, "display_name": {"type": "string", "default": ""}, "parent_name": {"type": "string", "default": ""}, "filter_name": {"type": "string"}, "is_cluster": {"type": "boolean", "default": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.StackDriverTimeSeries": {"properties": {"gcp_config": {"default": {}}, "client_config": {"default": {}}, "project_id": {"type": "string"}, "time_series": {"default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.StackDriverUpTimeCheckConfig": {"properties": {"gcp_config": {"default": {}}, "client_config": {"default": {}}, "project_id": {"type": "string"}, "uptime_check_config": {"default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.LoggingSink": {"properties": {"gcp_config": {"default": {}}, "client_config": {"default": {}}, "parent": {"type": "string"}, "log_sink": {"default": {}}, "unique_writer_identity": {"type": "boolean", "required": false}, "sink_type": {"type": "string"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.LoggingExclusion": {"properties": {"gcp_config": {"default": {}}, "client_config": {"default": {}}, "parent": {"type": "string"}, "log_exclusion": {"default": {}}, "update_mask": {"type": "boolean", "required": false}, "exclusion_type": {"type": "string"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.Logging.BillingAccounts.sinks": {"properties": {"sink_type": {"type": "string"}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "parent": {"type": "string"}, "log_sink": {"default": {}}, "unique_writer_identity": {"type": "boolean", "required": false}}, "derived_from": "nativeedge.nodes.gcp.LoggingSink"}, "nativeedge.nodes.gcp.Logging.Folders.sinks": {"properties": {"sink_type": {"type": "string"}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "parent": {"type": "string"}, "log_sink": {"default": {}}, "unique_writer_identity": {"type": "boolean", "required": false}}, "derived_from": "nativeedge.nodes.gcp.LoggingSink"}, "nativeedge.nodes.gcp.Logging.Organizations.sinks": {"properties": {"sink_type": {"type": "string"}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "parent": {"type": "string"}, "log_sink": {"default": {}}, "unique_writer_identity": {"type": "boolean", "required": false}}, "derived_from": "nativeedge.nodes.gcp.LoggingSink"}, "nativeedge.nodes.gcp.Logging.Projects.sinks": {"properties": {"sink_type": {"type": "string"}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "parent": {"type": "string"}, "log_sink": {"default": {}}, "unique_writer_identity": {"type": "boolean", "required": false}}, "derived_from": "nativeedge.nodes.gcp.LoggingSink"}, "nativeedge.nodes.gcp.Logging.BillingAccounts.exclusions": {"properties": {"exclusion_type": {"type": "string"}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "parent": {"type": "string"}, "log_exclusion": {"default": {}}, "update_mask": {"type": "boolean", "required": false}}, "derived_from": "nativeedge.nodes.gcp.LoggingExclusion"}, "nativeedge.nodes.gcp.Logging.Folders.exclusions": {"properties": {"exclusion_type": {"type": "string"}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "parent": {"type": "string"}, "log_exclusion": {"default": {}}, "update_mask": {"type": "boolean", "required": false}}, "derived_from": "nativeedge.nodes.gcp.LoggingExclusion"}, "nativeedge.nodes.gcp.Logging.Organizations.exclusions": {"properties": {"exclusion_type": {"type": "string"}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "parent": {"type": "string"}, "log_exclusion": {"default": {}}, "update_mask": {"type": "boolean", "required": false}}, "derived_from": "nativeedge.nodes.gcp.LoggingExclusion"}, "nativeedge.nodes.gcp.Logging.Organizatios.exclusions": {"properties": {"exclusion_type": {"type": "string"}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "parent": {"type": "string"}, "log_exclusion": {"default": {}}, "update_mask": {"type": "boolean", "required": false}}, "derived_from": "nativeedge.nodes.gcp.Logging.Organizations.exclusions"}, "nativeedge.nodes.gcp.Logging.Projects.exclusions": {"properties": {"exclusion_type": {"type": "string"}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "parent": {"type": "string"}, "log_exclusion": {"default": {}}, "update_mask": {"type": "boolean", "required": false}}, "derived_from": "nativeedge.nodes.gcp.LoggingExclusion"}, "nativeedge.nodes.gcp.Logging.Projects.metrics": {"properties": {"gcp_config": {"default": {}}, "client_config": {"default": {}}, "parent": {"type": "string"}, "log_metric": {"default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.IAM.Role": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "resource_id": {"type": "string", "default": ""}, "gcp_config": {"default": {}}, "client_config": {"default": {}}, "name": {"type": "string", "default": ""}, "title": {"type": "string", "default": ""}, "description": {"type": "string", "default": ""}, "permissions": {"type": "list", "default": []}, "stage": {"type": "string", "default": ""}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.gcp.Gcp": {"properties": {"client_config": {"default": {}}, "zones": {"type": "list", "default": []}, "resource_config": {"type": "dict", "default": {"resource_types": ["projects.zones.clusters"]}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.ansible.Executor": {"properties": {"ansible_external_venv": {"type": "string", "default": "", "description": "Ansible python venv with previously installed ansible and extra packages\n"}, "ansible_playbook_executable_path": {"type": "string", "default": "", "description": "A full path to your ansible_playbook executable if user don't want to use the included version of executable in the plugin\n"}, "extra_packages": {"type": "list", "default": [], "description": "List of python packages to install on controller virtual env before running the playbook. If the manager has no internet connection this feature cannot be used.\n"}, "galaxy_collections": {"type": "list", "default": [], "description": "List of Ansible galaxy collections to install on controller virtual env before running the playbook. If the manager has no internet connection this feature cannot be used.\n"}, "roles": {"type": "list", "default": [], "description": "List of roles to install on controller virtual env before running the playbook. If the manager has no internet connection this feature cannot be used.\n"}, "module_path": {"type": "string", "default": "", "description": "The location on the NativeEdge Manager file system where Ansible modules are expected to be installed or will be installed. The default value is empty and if so, this will be created automatically during the environment setup. The nativeedge-ansible-ctx module will be installed by default.\n"}, "playbook_source_path": {"type": "string", "default": "", "description": "A full path/URL that contain playbook specified in playbook_path.\n"}, "playbook_path": {"type": "string", "default": "", "description": "A path to your `site.yaml` or `main.yaml` in your Ansible Playbook relative to blueprint or playbook_source_path if playbook_source_path is URL to archive File relative inside the archive.\n"}, "additional_playbook_files": {"type": "list", "default": [], "description": "A list of string paths blueprint resources that you would like to download to the playbook directory. If you use this variable, you must list all of the paths that you expect to download.\n"}, "sources": {"description": "Your Inventory sources. Either YAML or a path to a file. If not provided the inventory will be take from the `sources` runtime property.\n"}, "run_data": {"default": {}, "description": "Variable values.\n"}, "sensitive_keys": {"type": "list", "description": "keys that you want us to obscure", "default": ["ansible_password"]}, "options_config": {"default": {}, "description": "Command-line options, such as `tags` or `skip_tags`.\n"}, "ansible_env_vars": {"default": {"ANSIBLE_HOST_KEY_CHECKING": "False", "ANSIBLE_INVALID_TASK_ATTRIBUTE_FAILED": "False", "ANSIBLE_STDOUT_CALLBACK": "json"}, "description": "A dictionary of environment variables to set.\n"}, "debug_level": {"type": "integer", "default": 2, "description": "Debug level\n"}, "log_stdout": {"type": "boolean", "description": "Whether to dump output to execution event log. Set to false to speed up long executions.", "default": true}, "additional_args": {"type": "string", "description": "Additional args that you want to use, for example, '-c local'.\n", "default": ""}, "start_at_task": {"type": "string", "description": "Start the playbook at the task matching this name\n", "default": ""}, "scp_extra_args": {"type": "string", "description": "Specify extra arguments to pass to scp only (e.g. -l)\n", "default": ""}, "sftp_extra_args": {"type": "string", "description": "Specify extra arguments to pass to sftp only (e.g. -f, -l)\n", "default": ""}, "ssh_common_args": {"type": "string", "description": "Specify common arguments to pass to sftp/scp/ssh (e.g. ProxyCommand)\n", "default": ""}, "ssh_extra_args": {"type": "string", "description": "Specify extra arguments to pass to ssh only (e.g. -R)\n", "default": ""}, "timeout": {"type": "string", "description": "Override the connection timeout in seconds (default=10)\n", "default": "10"}, "remerge_sources": {"type": "boolean", "description": "update sources on target node\n", "default": false}, "ansible_become": {"type": "boolean", "description": "A boolean value, `true` or `false` whether to assume the user privileges.\n", "default": false}, "tags": {"type": "list", "description": "A list of tags, in order of desired execution. If these tags are provided, they will be called, and auto_tags will be ignored.\n", "default": []}, "auto_tags": {"type": "boolean", "description": "If set to \"true\", the plugin will read the playbook and generate a list of tags to execute. This requires that the playbook is written in such a way that the specified tags will produce the desired result. This value is ignored if tags are provided.\n", "default": false}, "number_of_attempts": {"type": "integer", "default": 3, "description": "Total number of attempts to execute the playbook if exit code represents unreachable hosts\\failure.\n"}, "store_facts": {"type": "boolean", "default": true, "description": "Store ansible facts under runtime properties.\n"}, "log_runner_stdout": {"type": "boolean", "description": "Logs all stdout.", "default": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.helm.Binary": {"properties": {"helm_config": {"type": "nativeedge.types.helm.HelmConfig"}, "use_existing_resource": {"type": "boolean", "default": false}, "installation_source": {"type": "string", "default": "https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz"}, "max_sleep_time": {"type": "integer", "default": 300}}, "derived_from": "nativeedge.nodes.SoftwareComponent"}, "nativeedge.nodes.helm.Release": {"properties": {"helm_config": {"type": "nativeedge.types.helm.HelmConfig"}, "use_external_resource": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.helm.ClientConfig", "required": true}, "resource_config": {"type": "nativeedge.types.helm.ReleaseConfig", "required": true}, "max_sleep_time": {"type": "integer", "default": 900}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.helm.Repo": {"properties": {"helm_config": {"type": "nativeedge.types.helm.HelmConfig"}, "use_external_resource": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.types.helm.RepoConfig", "required": true}, "max_sleep_time": {"type": "integer", "default": 300}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.helm.Registry": {"properties": {"helm_config": {"type": "nativeedge.types.helm.HelmConfig"}, "resource_config": {"type": "nativeedge.types.helm.RegistryConfig", "required": true}, "max_sleep_time": {"type": "integer", "default": 300}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.docker.images": {"properties": {"client_config": {"type": "nativeedge.types.docker.ClientConfig", "description": "Your Docker client configuration.", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.docker.containers": {"properties": {"client_config": {"type": "nativeedge.types.docker.ClientConfig", "description": "Your Docker client configuration.", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.docker.host": {"properties": {"docker_machine": {"type": "nativeedge.types.docker.DockerMachineConfig", "description": "Docker Machine IP,User,Private_key", "required": false}, "resource_config": {"type": "nativeedge.types.docker.DockerInstallationConfig", "description": "Docker Installation type", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.docker.host_details": {"properties": {"client_config": {"type": "nativeedge.types.docker.ClientConfig", "description": "Your Docker client configuration.", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.docker.image": {"properties": {"client_config": {"type": "nativeedge.types.docker.ClientConfig", "description": "Your Docker client configuration.", "required": false}, "resource_config": {"type": "nativeedge.types.docker.Image", "description": "Docker Image type", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.docker.container": {"properties": {"client_config": {"type": "nativeedge.types.docker.ClientConfig", "description": "Your Docker client configuration.", "required": false}, "resource_config": {"type": "nativeedge.types.docker.Container", "description": "Docker Container type", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.docker.container_files": {"properties": {"resource_config": {"type": "nativeedge.types.docker.ContainerFiles", "description": "Docker Container Files type", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.docker.ansible_playbook": {"properties": {"ansible_playbook_executable_path": {"type": "string", "default": "ansible-playbook", "description": "A full path to your ansible_playbook executable if user don't want to use the included version of executable in the plugin\n"}, "playbook_source_path": {"type": "string", "default": "", "description": "A full path/URL that contain playbook specified in playbook_path or site_yaml_path.\n"}, "playbook_path": {"type": "string", "default": "", "description": "A path to your `site.yaml` or `main.yaml` in your Ansible Playbook relative to blueprint or playbook_source_path if playbook_source_path is URL to archive File relative inside the archive.\n"}, "site_yaml_path": {"type": "string", "default": "", "description": "DEPRECATED. A path to your `site.yaml` or `main.yaml` in your Ansible Playbook relative to blueprint or playbook_source_path if playbook_source_path is URL to archive File relative inside the archive.\n"}, "additional_playbook_files": {"type": "list", "default": [], "description": "A list of string paths blueprint resources that you would like to download to the playbook directory. If you use this variable, you must list all of the paths that you expect to download.\n"}, "sources": {"default": {}, "description": "Your Inventory sources. Either YAML or a path to a file. If not provided the inventory will be take from the `sources` runtime property.\n"}, "run_data": {"default": {}, "description": "Variable values.\n"}, "sensitive_keys": {"type": "list", "description": "keys that you want us to obscure", "default": ["ansible_password"]}, "options_config": {"default": {}, "description": "Command-line options, such as `tags` or `skip_tags`.\n"}, "ansible_env_vars": {"default": {"ANSIBLE_HOST_KEY_CHECKING": "False", "ANSIBLE_INVALID_TASK_ATTRIBUTE_FAILED": "False"}, "description": "A dictionary of environment variables to set.\n"}, "debug_level": {"type": "integer", "default": 2, "description": "Debug level\n"}, "additional_args": {"type": "string", "description": "Additional args that you want to use, for example, '-c local'.\n", "default": ""}, "save_playbook": {"type": "boolean", "description": "Save playbook after action\n", "default": false}, "remerge_sources": {"type": "boolean", "description": "update sources on target node\n", "default": false}, "ansible_become": {"type": "boolean", "description": "A boolean value, `true` or `false` whether to assume the user privileges.\n", "default": false}, "docker_machine": {"type": "nativeedge.types.docker.DockerMachineConfig", "description": "Docker Machine IP,User,Private_key", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.docker.terraform_module": {"properties": {"docker_machine": {"type": "nativeedge.types.docker.DockerMachineConfig", "description": "Docker Machine IP,User,Private_key", "required": false}, "terraform_plugins": {"description": "Terraform Plugins to install", "default": [], "required": true}, "resource_config": {"type": "nativeedge.types.terraform.RootModule", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.vsphere.Server": {"properties": {"agent_config": {}, "use_external_resource": {"description": "Whether to use a vm that already exists on vSphere.\n", "type": "boolean", "default": false}, "allowed_hosts": {"description": "Which ESX host(s) this server is allowed to be deployed on.\n", "required": false}, "allowed_clusters": {"description": "Which ESX cluster(s) this server is allowed to be deployed on.\n", "required": false}, "allowed_datastores": {"description": "Which ESX datastore(s) this server is allowed to be deployed on.\n", "required": false}, "server": {"type": "nativeedge.types.vsphere.ServerProperties"}, "networking": {"type": "nativeedge.types.vsphere.NetworkingProperties"}, "custom_attributes": {"description": "Dictionary of custom attribute keys & values.\nKeys which don't yet exist on the platform will\nbe created automatically. ::\n  custom_attributes:\n  key: value\n  lock: locked\n  keyring: empty\n", "required": false}, "cdrom_image": {"description": "Cdrom image path\n", "default": false}, "extra_config": {"description": "Extra config to set, key-value dictionary\n", "default": {}}, "wait_ip": {"description": "Use guest exported ip as default.\n", "default": false}, "vm_folder": {"description": "Folder name for place new created VM\n", "default": false}, "connection_config": {"type": "nativeedge.types.vsphere.Config"}, "force_stop": {"description": "Force stop vm for external resource\n", "default": false}, "force_delete": {"description": "Force delete vm for external resource\n", "default": false}, "enable_start_vm": {"description": "Enable start (power on) operation for VM.\n", "default": true}, "postpone_delete_networks": {"description": "Remover networks only after create VM.\n", "default": false}, "minimal_vm_version": {"description": "Set minimal version of vm\n", "default": 13}, "boot_order": {"description": "The order of boot\nExample:\n  - cdrom\n  - hdd\n  - ethernet\nIn above list will be provided, vsphere try to boot from cdrom,then\nfrom hdd (all disk_keys) and at the end from ethernet (ethernet_keys)\n", "type": "list", "required": false}, "disk_keys": {"type": "list", "required": false, "description": "The order of hdd boot - will be used only if boot_order provided.\nIf empty, the parameter will be generated based on vm properties (considering all hdd disks)\n"}, "ethernet_keys": {"type": "list", "required": false, "description": "The order of ethernet boot - will be used only if boot_order provided.\nIf empty, the parameter will be generated based on vm properties (considering all ethernet devices)\n"}}, "derived_from": "nativeedge.nodes.Compute"}, "nativeedge.nodes.vsphere.WindowsServer": {"properties": {"windows_password": {"description": "Administrator password to set when deploying Windows instances. If this is not supplied, agent_config.password will be used (if that has been supplied). Supplying neither of these properties will result in an error.\n", "type": "string", "required": false}, "windows_timezone": {"description": "Timezone to set Windows instances to. See https://msdn.microsoft.com/en-us/library/ms912391%28v=winembedded.11%29.aspx Defaults to GMT without daylight savings.\n", "type": "integer", "default": 90}, "windows_organization": {"description": "The organization name to set on the Windows system.\n", "type": "string", "default": "Organization"}, "custom_sysprep": {"description": "A custom System Preparation Answers file to use for full customization of Windows. This can be generated by the Windows System Image Manager. Note that this file should be verified to work correctly before being applied, as any errors will appear only on Windows and will not be visible to the plugin. Also note that any scripts, etc., that attempt to work on the VM after the custom sysprep must tolerate multiple retries because the plugin cannot detect when the custom sysprep has finished, so provides the server as soon as the IPs are assigned (which occurs before customization is complete).\n", "type": "string", "required": false}, "os_family": {"default": "windows", "description": "Overridden default from ``Server`` node_type."}, "agent_config": {"type": "nativeedge.datatypes.AgentConfig", "default": {"port": 5985}}, "use_external_resource": {"description": "Whether to use a vm that already exists on vSphere.\n", "type": "boolean", "default": false}, "allowed_hosts": {"description": "Which ESX host(s) this server is allowed to be deployed on.\n", "required": false}, "allowed_clusters": {"description": "Which ESX cluster(s) this server is allowed to be deployed on.\n", "required": false}, "allowed_datastores": {"description": "Which ESX datastore(s) this server is allowed to be deployed on.\n", "required": false}, "server": {"type": "nativeedge.types.vsphere.ServerProperties"}, "networking": {"type": "nativeedge.types.vsphere.NetworkingProperties"}, "custom_attributes": {"description": "Dictionary of custom attribute keys & values.\nKeys which don't yet exist on the platform will\nbe created automatically. ::\n  custom_attributes:\n  key: value\n  lock: locked\n  keyring: empty\n", "required": false}, "cdrom_image": {"description": "Cdrom image path\n", "default": false}, "extra_config": {"description": "Extra config to set, key-value dictionary\n", "default": {}}, "wait_ip": {"description": "Use guest exported ip as default.\n", "default": false}, "vm_folder": {"description": "Folder name for place new created VM\n", "default": false}, "connection_config": {"type": "nativeedge.types.vsphere.Config"}, "force_stop": {"description": "Force stop vm for external resource\n", "default": false}, "force_delete": {"description": "Force delete vm for external resource\n", "default": false}, "enable_start_vm": {"description": "Enable start (power on) operation for VM.\n", "default": true}, "postpone_delete_networks": {"description": "Remover networks only after create VM.\n", "default": false}, "minimal_vm_version": {"description": "Set minimal version of vm\n", "default": 13}, "boot_order": {"description": "The order of boot\nExample:\n  - cdrom\n  - hdd\n  - ethernet\nIn above list will be provided, vsphere try to boot from cdrom,then\nfrom hdd (all disk_keys) and at the end from ethernet (ethernet_keys)\n", "type": "list", "required": false}, "disk_keys": {"type": "list", "required": false, "description": "The order of hdd boot - will be used only if boot_order provided.\nIf empty, the parameter will be generated based on vm properties (considering all hdd disks)\n"}, "ethernet_keys": {"type": "list", "required": false, "description": "The order of ethernet boot - will be used only if boot_order provided.\nIf empty, the parameter will be generated based on vm properties (considering all ethernet devices)\n"}}, "derived_from": "nativeedge.nodes.vsphere.Server"}, "nativeedge.nodes.vsphere.Network": {"properties": {"use_external_resource": {"description": "Whether to use a vm that already exists on vSphere.\n", "type": "boolean", "default": false}, "network": {"description": "key-value network configuration. ::\n  name: network name\n  vlan_id: vLAN identifier which will be assigned to the network\n  vswitch_name: name of the vSwitch the network will be connected to.\n"}, "connection_config": {"default": {}, "type": "nativeedge.types.vsphere.Config"}}, "derived_from": "nativeedge.nodes.Network"}, "nativeedge.nodes.vsphere.Storage": {"properties": {"use_external_resource": {"description": "Whether to use a vm that already exists on vSphere.\n", "type": "boolean", "default": false}, "storage": {"description": "key-value storage disk configuration. ::\nparent_key: Device key from controller, negative mean\n  that can be used any\nstorage_size: disk size in GB.\nthin_provision: Flag to indicate to the underlying\n  filesystem, whether the virtual disk backing file should\n  be allocated lazily (using thin provisioning). This flag\n  is only used for file systems that support configuring\n  the provisioning policy on a per file basis, such as VMFS3.\n  Default: false\nmode: The disk persistence mode. Valid modes are:\n  * persistent\n  * independent_persistent\n  * independent_nonpersistent\n  * nonpersistent\n  * undoable\n  * append\n", "default": {}}, "connection_config": {"default": {}, "type": "nativeedge.types.vsphere.Config"}}, "derived_from": "nativeedge.nodes.Volume"}, "nativeedge.nodes.vsphere.IPPool": {"properties": {"datacenter_name": {"description": "datacenter name.\n", "type": "string", "required": false}, "ippool": {"description": "Ip Pool settings:\n  name: ip pool name\n  subnet: Subnet settings: x.x.x.x\n  netmask: Netmask: x.x.x.x\n  gateway: Ip gateway: x.x.x.x\n  range: Ip range for allocate: x.x.x.x#x\n  dhcp: Use external dhcp server. Default is False\n  enabled: Enable ip pool. Default is True\n"}, "connection_config": {"default": {}, "type": "nativeedge.types.vsphere.Config"}}, "derived_from": "nativeedge.nodes.Subnet"}, "nativeedge.nodes.vsphere.CloudInitISO": {"properties": {"datacenter_name": {"description": "datacenter name.\n", "type": "string", "required": false}, "allowed_datastores": {"description": "Which ESX datastore(s) this image is allowed to be stored on.\n", "required": false}, "allowed_datastore_ids": {"description": "Which ESX datastore id(s) this image is allowed to be stored on. Field has priority over allowed_datastores.\n", "required": false}, "volume_prefix": {"default": "cloudinit", "description": "Datastorage path for save volume\n"}, "vol_ident": {"default": "cidata", "description": "The volume identification string to use on the new ISO.\n"}, "sys_ident": {"default": "", "description": "The system identification string to use on the new ISO.\n"}, "files": {"default": {}, "description": "List of files for save to CloudInit iso image with file content. Example:\n  meta-data: \"instance-id: localhost\"\n  user-data: \"password: passw0rd\"\nwhere meta-data and user-data are file names on cloud init image.\n"}, "raw_files": {"default": {}, "description": "Deprecated. List files for save to CloudInit iso image with file name from blueprint.\n"}, "files_raw": {"default": {"get_property": ["SELF", "raw_files"]}, "description": "List files for save to CloudInit iso image with file name from blueprint. Example:\n  meta-data: meta_data.yaml\nwhere meta-data is file names on cloud init image, meta_data.yaml is raw file name.\n"}, "connection_config": {"default": {}, "type": "nativeedge.types.vsphere.Config"}}, "derived_from": "nativeedge.nodes.Volume"}, "nativeedge.nodes.vsphere.Datacenter": {"properties": {"name": {"description": "The name of the datacenter.\n"}, "use_external_resource": {"description": "Whether to use a datacenter that already exists on vSphere. Currently, datacenters cannot be created or deleted, and this node type exists only for compatibility with the NSX plugin.\n", "type": "boolean", "default": true}, "connection_config": {"default": {}, "type": "nativeedge.types.vsphere.Config"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.vsphere.Datastore": {"properties": {"name": {"description": "The name of the datastore.\n"}, "use_external_resource": {"description": "Whether to use a datastore that already exists on vSphere. Currently, datastores cannot be created or deleted, and this node type exists only for compatibility with the NSX/Content Library plugin.\n", "type": "boolean", "default": true}, "connection_config": {"default": {}, "type": "nativeedge.types.vsphere.Config"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.vsphere.Cluster": {"properties": {"name": {"description": "The name of the cluster.\n"}, "use_external_resource": {"description": "Whether to use a cluster that already exists on vSphere. Currently, clusters cannot be created or deleted, and this node type exists only for compatibility with the NSX plugin.\n", "type": "boolean", "default": true}, "connection_config": {"default": {}, "type": "nativeedge.types.vsphere.Config"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.vsphere.ResourcePool": {"properties": {"name": {"description": "The name of the resource_pool.\n"}, "use_external_resource": {"description": "Whether to use a resource pool that already exists on vSphere.\n", "type": "boolean", "default": false}, "host_name": {"description": "The name of the host to create the resource pool\n", "default": ""}, "cluster_name": {"description": "The name of the cluster to create the resource pool\n", "default": ""}, "pool_spec": {"description": "key-value resource pool configuration. ::\ncpuAllocation:\n  expandableReservation: True or False\n  limit: max limit\n  reservation: Amount of resource that is guaranteed available\n  shares:\n    level: The allocation level. Valid levels are:\n      * custom\n      * high\n      * low\n      * normal\n    shares: The number of shares allocated. Used to determine resource allocation in case of resource contention,\n            used with custom level only\nmemoryAllocation:\n  expandableReservation: True or False\n  limit: max limit\n  reservation: Amount of resource that is guaranteed available\n  shares:\n    level: The allocation level. Valid levels are:\n      * custom\n      * high\n      * low\n      * normal\n    shares: The number of shares allocated. Used to determine resource allocation in case of resource contention,\n            used with custom level only\n", "default": {}}, "connection_config": {"default": {}, "type": "nativeedge.types.vsphere.Config"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.vsphere.VMFolder": {"properties": {"name": {"description": "The name of the VM folder.\n"}, "use_external_resource": {"description": "Whether to use a VM folder that already exists on vSphere. Currently, VM folder cannot be created or deleted, and this node type exists only for compatibility with the NSX/Content Library plugin.\n", "type": "boolean", "default": true}, "connection_config": {"default": {}, "type": "nativeedge.types.vsphere.Config"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.vsphere.Host": {"properties": {"name": {"description": "The name of the hypervisor host.\n"}, "use_external_resource": {"description": "Whether to use a hypervisor host that already exists on vSphere. Currently, hypervisor hosts cannot be created or deleted, and this node type exists only for compatibility with the NSX/Content Library plugin.\n", "type": "boolean", "default": true}, "connection_config": {"default": {}, "type": "nativeedge.types.vsphere.Config"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.vsphere.ContentLibraryDeployment": {"properties": {"library_name": {"description": "The name of the content library name.\n", "default": ""}, "template_name": {"description": "The name of the content library item name.\n", "default": ""}, "target": {"description": "Target settings for install:\n  resource_pool_id: Identifier of the resource pool to which the\n      virtual machine or virtual appliance should be attached.\n  host_id: Identifier of the target host on which the virtual\n      machine or virtual appliance will run. Optional. If unset,\n      the server will automatically select a target host from the\n      resource pool.\n  folder_id: Identifier of the vCenter folder that should contain\n      the virtual machine or virtual appliance. The folder must be\n      virtual machine folder. Optional. If unset, the server will\n      choose the deployment folder.\n", "default": {}}, "deployment_spec": {"description": "Deployment settings for install:\n  name: Name assigned to the deployed target virtual machine or\n      virtual appliance. Optional. If unset, the server will use\n      the name from the instance.id.\n  annotation: Annotation assigned to the deployed target virtual\n      machine or virtual appliance. Optional. If unset, the server\n      will use the annotation from the OVF package.\n  network_mappings: Specification of the target network to use for\n      sections of type ovf:NetworkSection in the OVF descriptor.\n  storage_mappings: Specification of the target storage to use for\n      sections of type vmw:StorageGroupSection in the OVF descriptor.\n  storage_provisioning: Default storage provisioning type to use for\n      all sections of type vmw:StorageSection in the OVF descriptor.\n  storage_profile_id: Default storage profile to use for all sections\n      of type vmw:StorageSection in the OVF descriptor.\n  locale: The locale to use for parsing the OVF descriptor.\n  flags: Flags to be use for deployment.\n  additional_parameters: Additional OVF parameters that may be needed\n      for the deployment.\n  default_datastore_id: Default datastore to use for all sections of\n      type vmw:StorageSection in the OVF descriptor. Optional.\n      If unset, the server will choose the default datastore.\n", "default": {}}, "connection_config": {"default": {}, "type": "nativeedge.types.vsphere.Config"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.vsphere.OvfDeployment": {"properties": {"target": {"description": "Target settings for install:\n  resource_pool: name of the resource pool to which the\n      virtual machine or virtual appliance should be attached. If unset,\n      the server will automatically select the default resource pool\n      from connection_config.\n  host: name of the target host on which the virtual\n      machine or virtual appliance will run. Optional. If unset,\n      the server will automatically select a target host from the\n      resource pool.\n  folder: name of of the vCenter folder that should contain\n      the virtual machine or virtual appliance. The folder must be\n      virtual machine folder. Optional. If unset, the server will\n      choose the datacenter default folder.\n", "default": {}}, "ovf_name": {"description": "Ovf Deployment name.\n", "default": ""}, "ovf_source": {"description": "Ovf Source can be local or from URL\n", "default": ""}, "datastore_name": {"description": "Datastore name to use when deploying the Ovf.\n"}, "disk_provisioning": {"description": "Disk provisioning type. could be one of these values:\n - monolithicSparse\n - monolithicFlat\n - twoGbMaxExtentSparse\n - twoGbMaxExtentFlat\n - thin\n - thick\n - sparse\n - flat\n - seSparse\n", "default": "thin"}, "network_mappings": {"description": "Specification of the target network to use for ovf:NetworkSection in the OVF descriptor. array of networks mapping [(key: value)] where key is ovf network name and value is vCenter network\n"}, "memory": {"description": "Amount of RAM, in MB.\n", "type": "integer", "required": false}, "cpus": {"description": "Number of CPUs.\n", "type": "integer", "required": false}, "disk_size": {"description": "Disk size in GBs.\n", "type": "integer", "required": false}, "cdrom_image": {"description": "Cdrom image path\n", "type": "string", "required": false}, "extra_config": {"description": "Extra config to set, key-value dictionary\n", "type": "dict", "default": {}}, "boot_firmware": {"description": "specify which boot firmware to use it can be [bios,efi]\n", "type": "string", "required": false}, "boot_order": {"description": "The order of boot\nExample:\n  - cdrom\n  - hdd\n  - ethernet\nIn above list will be provided, vsphere try to boot from cdrom,then\nfrom hdd (all disk_keys) and at the end from ethernet (ethernet_keys)\n", "type": "list", "required": false}, "disk_keys": {"type": "list", "required": false, "description": "The order of hdd boot - will be used only if boot_order provided.\nIf empty, the parameter will be generated based on vm properties (considering all hdd disks)\n"}, "ethernet_keys": {"type": "list", "required": false, "description": "The order of ethernet boot - will be used only if boot_order provided.\nIf empty, the parameter will be generated based on vm properties (considering all ethernet devices)\n"}, "connection_config": {"default": {}, "type": "nativeedge.types.vsphere.Config"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.vsphere.NIC": {"properties": {"name": {"description": "Network name for connect\n"}, "switch_distributed": {"description": "determines if this is connected to a distributed port group\n", "default": false}, "adapter_type": {"description": "Possible: Vmxnet3, Vmxnet2, Sriov, E1000, E1000e\n", "default": "Vmxnet3"}, "start_connected": {"description": "Specifies whether or not to connect the device when the virtual machine starts.\n", "default": true}, "allow_guest_control": {"description": "Enables guest control over whether the connectable device is connected.\n", "default": true}, "network_connected": {"description": "Indicates whether the device is currently connected. Valid only while the virtual machine is running.\n", "default": true}, "wake_on_lan_enabled": {"description": "Indicates whether wake-on-LAN is enabled on this virtual network adapter. Clients can set this property to selectively enable or disable wake-on-LAN.\n", "default": true}, "address_type": {"description": "MAC address type. Valid values for address type are: ManualStatically assigned MAC address. GeneratedAutomatically generated MAC address. AssignedMAC address assigned by VirtualCenter.\n", "default": "assigned"}, "mac_address": {"description": "MAC address assigned to the virtual network adapter. Clients can set this property to any of the allowed address types. The server might override the specified value for \"Generated\" or \"Assigned\" if it does not fall in the right ranges or is determined to be a duplicate.\n", "default": ""}, "network_configuration": {"default": {}, "description": "Only valid with a relationship nativeedge.relationships.vsphere.nic_connected_to_network to a network. Dictionary with following keys:\n  'from_relationship': (bool, False),\n  'external': (bool, False),\n  'management': (bool, False),\n  'use_dhcp': (bool, True),\n  'network': (basestring, None),\n  'gateway': (basestring, None),\n  'ip': (basestring, None)\n"}, "connection_config": {"type": "nativeedge.types.vsphere.Config"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.vsphere.SCSIController": {"properties": {"busNumber": {"description": "Bus number associated with this controller.\n", "default": 0}, "label": {"description": "Label for SCSI controller\n", "default": "SCSIController"}, "adapterType": {"description": "Possible: paravirtual, lsilogic_sas, lsilogic\n", "default": "paravirtual"}, "hotAddRemove": {"description": "All SCSI controllers support hot adding and removing of devices. This support can't be toggled in the current implementation. Therefore, this option is ignored when reconfiguring a SCSI controller and is always set to \"true\" when reading an existing configuration.\n", "default": true}, "sharedBus": {"description": "Mode for sharing the SCSI bus. The modes are physicalSharing, virtualSharing, and noSharing.\n", "default": "noSharing"}, "scsiCtlrUnitNumber": {"description": "The unit number of the SCSI controller. The SCSI controller sits on its own bus, so this field defines which slot the controller is using.\n", "default": -1}, "connection_config": {"type": "nativeedge.types.vsphere.Config"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.vsphere.PCIDevice": {"properties": {"device_name": {"description": "PCI Passthrough device name\n", "type": "string"}, "turn_off_vm": {"description": "control if we turn off the machine to attach PCI device as it can't be attached while VM is turned on\n", "default": false}, "connection_config": {"type": "nativeedge.types.vsphere.Config"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.vsphere.USBDevice": {"properties": {"controller_type": {"description": "usb controller type associated with USB. values can be : usb2, usb3\n", "default": "usb3"}, "device_name": {"description": "host usb device name\n", "type": "string"}, "connection_config": {"type": "nativeedge.types.vsphere.Config"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.vsphere.SerialPort": {"properties": {"device_name": {"description": "host serial port name should be absolute path /dev/char/serial/uartX\n", "type": "string"}, "turn_off_vm": {"description": "control if we turn off the machine to attach serial port as it can't be attached while VM is turned on\n", "default": false}, "connection_config": {"type": "nativeedge.types.vsphere.Config"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.vsphere.ISO": {"properties": {"datacenter_name": {"description": "datacenter name.\n", "type": "string", "required": false}, "allowed_datastores": {"description": "Which ESX datastore(s) this image is allowed to be stored on.\n", "required": false}, "allowed_datastore_ids": {"description": "Which ESX datastore id(s) this image is allowed to be stored on. Field has priority over allowed_datastores.\n", "required": false}, "volume_prefix": {"default": "cloudinit", "description": "Datastorage path for save volume\n"}, "iso_file_path": {"type": "string", "description": "The path for the ISO to upload.\n", "required": true}, "connection_config": {"default": {}, "type": "nativeedge.types.vsphere.Config"}, "use_external_resource": {"default": false, "description": "Use existing image (must be preuploaded to vsphere)\n"}, "force_delete": {"default": false, "description": "Delete image if external resource\n"}}, "derived_from": "nativeedge.nodes.Volume"}, "nativeedge.nodes.terraform": {"properties": {"terraform_config": {"type": "nativeedge.types.terraform.DirectoryConfig", "required": false}, "resource_config": {"type": "nativeedge.types.terraform.InstallConfig", "required": true}}, "derived_from": "nativeedge.nodes.SoftwareComponent"}, "nativeedge.nodes.terraform.Module": {"properties": {"resource_config": {"type": "nativeedge.types.terraform.RootModule", "required": true}, "max_runtime_property_size": {"type": "integer", "default": 1000000}, "max_stored_filesize": {"type": "integer", "default": 1000000}, "store_plugins_dir": {"type": "boolean", "default": false}, "provider_upgrade": {"type": "boolean", "default": false}, "general_executor_process": {"type": "dict", "default": {"max_sleep_time": 300}}, "tflint_config": {"type": "nativeedge.types.terraform.tflint"}, "tfsec_config": {"type": "nativeedge.types.terraform.tfsec"}, "terratag_config": {"type": "nativeedge.types.terraform.terratag"}, "infracost_config": {"type": "nativeedge.types.terraform.infracost"}, "opa_config": {"type": "nativeedge.types.terraform.opa"}}, "derived_from": "nativeedge.nodes.ApplicationModule"}, "nativeedge.nodes.kubernetes.resources.ResourceBase": {"properties": {"client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.kubernetes.resources.ResourceWithValidateStatus": {"properties": {"validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.ResourceBase"}, "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource": {"properties": {"definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.ResourceWithValidateStatus"}, "nativeedge.nodes.kubernetes.resources.RoleBinding": {"properties": {"definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.Role": {"properties": {"definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.ClusterRole": {"properties": {"definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.Secret": {"properties": {"definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.ServiceAccount": {"properties": {"definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.Deployment": {"properties": {"validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.Node": {"properties": {"definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.Namespace": {"properties": {"definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.Pod": {"properties": {"validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.ReplicaSet": {"properties": {"validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.ReplicationController": {"properties": {"validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.DaemonSet": {"properties": {"definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.CustomResourceDefinition": {"properties": {"definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.CustomObject": {"properties": {"options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.Service": {"properties": {"validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.PersistentVolume": {"properties": {"validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.ConfigMap": {"properties": {"definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.StorageClass": {"properties": {"definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.StatefulSet": {"properties": {"definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.PodSecurityPolicy": {"properties": {"definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.NetworkPolicy": {"properties": {"definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.Ingress": {"properties": {"definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.PersistentVolumeClaim": {"properties": {"definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.CustomBlueprintDefinedResource": {"properties": {"api_mapping": {"type": "nativeedge.types.kubernetes.ApiMapping", "description": "Python Kubernetes API objects and methods definitions used for given resource type\n"}, "definition": {"type": "nativeedge.types.kubernetes.ResourceDefinition", "description": "Definition of resource object using native Kubernetes YAML spec\n"}, "validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.BlueprintDefinedResource"}, "nativeedge.nodes.kubernetes.resources.FileDefinedResource": {"properties": {"file": {"type": "nativeedge.types.kubernetes.FileResource", "description": "A path to YAML file containing the resource definition.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.ResourceWithValidateStatus"}, "nativeedge.nodes.kubernetes.resources.MultipleFileDefinedResources": {"properties": {"files": {"description": "A list of paths to YAML files containing the resources definition.\n"}, "allow_node_redefinition": {"type": "boolean", "description": "Permit changing the name and kind and number of resources defined in file.\n", "default": true}, "validate_resource_status": {"type": "boolean", "description": "Set this to \"true\" if you want NativeEdge to wait for a predetermined state.", "default": false}, "client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "use_external_resource": {"type": "boolean", "description": "If the resource is expected to already exist.\n", "default": false}, "create_if_missing": {"type": "boolean", "description": "If the resource is supposed to exist, and it does not, then create. Such resources will not deleted on uninstall.\n", "default": false}, "use_if_exists": {"type": "boolean", "description": "If a resource with this name and kind already exists in the provided namespace, then use it instead of failing because the resource already exists. Such resources will be deleted on uninstall.\n", "default": true}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}, "labels": {"description": "Labels to add to the Kubernetes objects.", "type": "nativeedge.types.kubernetes.Labels"}}, "derived_from": "nativeedge.nodes.kubernetes.resources.ResourceWithValidateStatus"}, "nativeedge.nodes.kubernetes.resources.SharedCluster": {"properties": {"client_config": {"type": "nativeedge.types.kubernetes.ClientConfig", "required": false, "description": "Configuration properties of kubernetes API and authentication properties of Kubernetes Cloud providers.\n"}, "options": {"description": "API options depending on API operations execution.", "type": "nativeedge.types.kubernetes.Options"}}, "derived_from": "nativeedge.nodes.SharedResource"}, "nativeedge.nodes.terragrunt": {"properties": {"terragrunt_config": {"type": "nativeedge.types.terragrunt.DirectoryConfig", "required": false}, "resource_config": {"type": "nativeedge.types.terragrunt.InstallConfig", "required": true}}, "derived_from": "nativeedge.nodes.SoftwareComponent"}, "nativeedge.nodes.terragrunt.Stack": {"properties": {"resource_config": {"type": "nativeedge.types.terragrunt.Stack", "required": true}}, "derived_from": "nativeedge.nodes.ApplicationModule"}, "nativeedge.nodes.openstack.NetworkBase": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}}, "derived_from": "nativeedge.nodes.Network"}, "nativeedge.nodes.openstack.Network": {"properties": {"resource_config": {"type": "nativeedge.types.openstack.Network", "required": true}, "use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}}, "derived_from": "nativeedge.nodes.openstack.NetworkBase"}, "nativeedge.nodes.openstack.Subnet": {"properties": {"resource_config": {"type": "nativeedge.types.openstack.Subnet", "required": true}, "use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}}, "derived_from": "nativeedge.nodes.openstack.NetworkBase"}, "nativeedge.nodes.openstack.Port": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "fixed_ip": {"type": "string", "default": ""}, "resource_config": {"type": "nativeedge.types.openstack.Port", "required": true}}, "derived_from": "nativeedge.nodes.Port"}, "nativeedge.nodes.openstack.Router": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "resource_config": {"type": "nativeedge.types.openstack.Router", "required": true}, "external_network": {"type": "string", "default": ""}}, "derived_from": "nativeedge.nodes.Router"}, "nativeedge.nodes.openstack.FloatingIP": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "allow_reallocation": {"type": "boolean", "default": false}, "resource_config": {"type": "nativeedge.types.openstack.FloatingIP", "required": true}}, "derived_from": "nativeedge.nodes.VirtualIP"}, "nativeedge.nodes.openstack.SecurityGroup": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "disable_default_egress_rules": {"type": "boolean", "default": false}, "security_group_rules": {"required": false, "default": []}, "resource_config": {"type": "nativeedge.types.openstack.SecurityGroup", "required": true}}, "derived_from": "nativeedge.nodes.SecurityGroup"}, "nativeedge.nodes.openstack.SecurityGroupRule": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "resource_config": {"type": "nativeedge.types.openstack.SecurityGroupRule", "required": true}}, "derived_from": "nativeedge.nodes.SecurityGroup"}, "nativeedge.nodes.openstack.RBACPolicy": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "resource_config": {"type": "nativeedge.types.openstack.RBACPolicy", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.openstack.Server": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "resource_config": {"type": "nativeedge.types.openstack.Server", "required": true}, "encode_user_data": {"required": false, "type": "boolean", "default": true}, "use_password": {"type": "boolean", "default": false}, "use_ipv6_ip": {"type": "boolean", "default": false}, "use_public_ip": {"type": "boolean", "default": false}, "image": {"type": "string", "default": ""}, "flavor": {"type": "string", "default": ""}}, "derived_from": "nativeedge.nodes.Compute"}, "nativeedge.nodes.openstack.WindowsServer": {"properties": {"os_family": {"type": "string", "default": "windows"}, "agent_config": {"type": "nativeedge.datatypes.AgentConfig", "default": {"port": 5985}}, "use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "resource_config": {"type": "nativeedge.types.openstack.Server", "required": true}, "encode_user_data": {"required": false, "type": "boolean", "default": true}, "use_password": {"type": "boolean", "default": false}, "use_ipv6_ip": {"type": "boolean", "default": false}, "use_public_ip": {"type": "boolean", "default": false}, "image": {"type": "string", "default": ""}, "flavor": {"type": "string", "default": ""}}, "derived_from": "nativeedge.nodes.openstack.Server"}, "nativeedge.nodes.openstack.ServerGroup": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "resource_config": {"type": "nativeedge.types.openstack.ServerGroup", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.openstack.KeyPair": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "private_key": {"required": false, "type": "string"}, "resource_config": {"type": "nativeedge.types.openstack.KeyPair", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.openstack.HostAggregate": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "metadata": {"required": false, "default": {}}, "hosts": {"required": false, "default": []}, "resource_config": {"type": "nativeedge.types.openstack.HostAggregate", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.openstack.Image": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "image_url": {"type": "string", "default": ""}, "resource_config": {"type": "nativeedge.types.openstack.Image", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.openstack.Flavor": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "resource_config": {"type": "nativeedge.types.openstack.Flavor", "required": true}, "extra_specs": {"default": {}}, "tenants": {"default": []}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.openstack.User": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "resource_config": {"type": "nativeedge.types.openstack.User", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.openstack.Group": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "resource_config": {"type": "nativeedge.types.openstack.Group", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.openstack.Role": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "resource_config": {"type": "nativeedge.types.openstack.Role", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.openstack.Project": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "groups": {"default": []}, "users": {"default": []}, "quota": {"default": {}}, "resource_config": {"type": "nativeedge.types.openstack.Project", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.openstack.Volume": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "device_name": {"type": "string", "default": "auto"}, "resource_config": {"type": "nativeedge.types.openstack.Volume", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.openstack.VolumeType": {"properties": {"use_external_resource": {"type": "boolean", "default": false}, "create_if_missing": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "resource_config": {"type": "nativeedge.types.openstack.VolumeType", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.openstack.Zone": {"properties": {"client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "resource_config": {"type": "nativeedge.types.openstack.ZoneType", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.openstack.RecordSet": {"properties": {"client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "resource_config": {"type": "nativeedge.types.openstack.RecordSetType", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.openstack.SharedFileSystem": {"properties": {"client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "resource_config": {"type": "nativeedge.types.openstack.SharedFileSystem", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.openstack.NetworkShare": {"properties": {"client_config": {"type": "nativeedge.types.openstack.ClientConfig", "required": false}, "resource_config": {"type": "nativeedge.types.openstack.NetworkShare", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.CloudInit.CloudConfig": {"properties": {"header": {"default": "#cloud-config"}, "encode_base64": {"default": false}, "resource_config": {"default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.ConfigurationLoader": {"properties": {"parameters_json": {"default": ""}}, "derived_from": "nativeedge.nodes.ApplicationServer"}, "nativeedge.nodes.keys.RSAKey": {"properties": {"use_secret_store": {"type": "boolean", "default": true}, "use_secrets_if_exist": {"type": "boolean", "description": "this flag is able to be true only if use_secret_store is true if this property is false the secret for the key value will be created, if true then the existing secrets of an existing node with same key_name will be used as a key, if this property is true and the secrets does not exist they will be created.\n", "default": false}, "key_name": {"type": "string", "description": "Deprecated. Use resource_config.key_name.", "required": false}, "resource_config": {"description": "A dictionary of values to pass to configure the key.\n", "type": "nativeedge.datatypes.key", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.terminal.Raw": {"properties": {"terminal_auth": {"description": "terminal credentials, like example:\n  user: <user name>\n  password: <user password>\n  ip: <host name>\n", "type": "nativeedge.datatypes.terminal_auth"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.File": {"properties": {"resource_config": {"type": "nativeedge.datatypes.File", "required": true}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.ftp": {"properties": {"resource_config": {"type": "nativeedge.datatypes.ftp_auth", "required": true}, "raw_files": {"default": {}, "description": "list files from blueprint to upload\n"}, "files": {"default": {}, "description": "list files with content from blueprint to upload\n"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.rest.Requests": {"properties": {"hosts": {"description": "list of hosts name or IP addresses of Rest Servers\n", "default": []}, "host": {"description": "host name or IP addresses of Rest Servers if list of hosts is not needed single host can be provided by this property. NOTE: the 'hosts' property overwirte the 'host' property\n", "default": []}, "port": {"description": "port number. When -1 default ports are used (80 for ssl = false and 443 for ssl = true)\n", "type": "integer", "default": -1}, "ssl": {"description": "http or https\n", "type": "boolean", "default": false}, "verify": {"description": "A boolean which controls whether we verify the server's TLS certificate. Supported such values: * `True`: default value, check certificaties, * `False`: ignore server certificates, * `<file path>`: path to certificate on local system, * `<certificate content>`: certificate content.\n", "default": true}, "cert": {"description": "Supported such values: * `None`: default value, ignore client certificates, * `<file path>`: path to certificate on local system, * `<certificate content>`: certificate content.\n", "default": null}, "timeout": {"description": "Timeout value for requests.\n", "default": null}, "proxies": {"description": "List of proxies.\n", "default": {}}, "params": {"description": "Template parameters. Default is empty dictionary.\n", "default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.rest.BunchRequests": {"properties": {"hosts": {"description": "list of hosts name or IP addresses of Rest Servers\n", "default": []}, "host": {"description": "host name or IP addresses of Rest Servers if list of hosts is not needed single host can be provided by this property. NOTE: the 'hosts' property overwirte the 'host' property\n", "default": []}, "port": {"description": "port number. When -1 default ports are used (80 for ssl = false and 443 for ssl = true)\n", "type": "integer", "default": -1}, "ssl": {"description": "http or https\n", "type": "boolean", "default": false}, "verify": {"description": "A boolean which controls whether we verify the server's TLS certificate. Supported such values: * `True`: default value, check certificaties, * `False`: ignore server certificates, * `<file path>`: path to certificate on local system, * `<certificate content>`: certificate content.\n", "default": true}, "cert": {"description": "Supported such values: * `None`: default value, ignore client certificates, * `<file path>`: path to certificate on local system, * `<certificate content>`: certificate content.\n", "default": null}, "timeout": {"description": "Timeout value for requests.\n", "default": null}, "proxies": {"description": "List of proxies.\n", "default": {}}, "params": {"description": "Template parameters. Default is empty dictionary.\n", "default": {}}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.secrets.Writer": {"properties": {"entries": {"default": {}}, "do_not_delete": {"type": "boolean", "default": false}, "variant": {"type": "string", "required": false}, "separator": {"type": "string", "required": false}, "logs_secrets": {"type": "boolean", "default": false, "required": false}, "update_if_exists": {"type": "boolean", "default": false, "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.secrets.Reader": {"properties": {"keys": {"default": []}, "variant": {"type": "string", "required": false}, "separator": {"type": "string", "required": false}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.resources.List": {"properties": {"resource_config": {"default": []}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.resources.ListItem": {"properties": {}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.resources.ModifiedIso": {"properties": {"iso_path": {"type": "string", "required": true, "description": "The manager path to original iso\n"}, "output_iso_path": {"type": "string", "required": false, "description": "The manager path to output iso\n"}, "new_directories": {"default": [], "description": "The list of new directories which should be added to file system. https://clalancette.github.io/pycdlib/example-walking-iso-filesystem.html Must including keys:\n  iso_path, rr_name (only for rocky ridge iso), joliet_path (only for joliet iso),\n  file_mode (only for rocky ridge iso), udf_path (only for udf iso)\n"}, "new_files": {"default": [], "description": "The list of new directories which should be added to file system. https://clalancette.github.io/pycdlib/example-walking-iso-filesystem.html Must including keys:\n  iso_path, file_context(context of file),\n  rr_name (only for rocky ridge iso), joliet_path (only for joliet iso),\n  file_mode (only for rocky ridge iso), udf_path (only for udf iso)\n"}}, "derived_from": "nativeedge.nodes.Root"}, "nativeedge.nodes.serverless.Binary": {"properties": {"serverless_config": {"type": "nativeedge.types.serverless.ServerlessConfig"}, "use_external_resource": {"type": "boolean", "default": false}, "installation_source": {"type": "string", "default": "https://github.com/serverless/serverless/releases/download/v3.22.0/serverless-linux-x64"}, "max_sleep_time": {"type": "integer", "default": 300}}, "derived_from": "nativeedge.nodes.SoftwareComponent"}, "nativeedge.nodes.serverless.Service": {"properties": {"serverless_config": {"type": "nativeedge.types.serverless.ServerlessConfig"}, "use_external_resource": {"type": "boolean", "default": false}, "client_config": {"type": "nativeedge.types.serverless.ClientConfig", "required": true}, "resource_config": {"type": "nativeedge.types.serverless.ServiceConfig", "required": true}}, "derived_from": "nativeedge.nodes.SoftwareComponent"}, "nativeedge.nodes.libvirt.domain": {"properties": {"use_external_resource": {"required": false, "default": false, "description": "Use external object. The default is `false`.\n"}, "resource_id": {"required": false, "default": "", "description": "Used to identify the object when `use_external_resource` is true.\n"}, "backup_dir": {"default": "./"}, "libvirt_auth": {"default": "qemu:///system"}, "params": {"type": "nativeedge.datatypes.domain"}}, "derived_from": "nativeedge.nodes.Compute"}, "nativeedge.nodes.network": {"properties": {"use_external_resource": {"required": false, "default": false, "description": "Use external object. The default is `false`.\n"}, "resource_id": {"required": false, "default": "", "description": "Used to identify the object when `use_external_resource` is true.\n"}, "backup_dir": {"default": "./"}, "libvirt_auth": {"default": "qemu:///system"}, "params": {"type": "nativeedge.datatypes.network"}}, "derived_from": "nativeedge.nodes.Network"}, "nativeedge.nodes.libvirt.pool": {"properties": {"use_external_resource": {"required": false, "default": false, "description": "Use external object. The default is `false`.\n"}, "resource_id": {"required": false, "default": "", "description": "Used to identify the object when `use_external_resource` is true.\n"}, "backup_dir": {"default": "./"}, "libvirt_auth": {"default": "qemu:///system"}, "params": {"type": "nativeedge.datatypes.pool"}}, "derived_from": "nativeedge.nodes.Tier"}, "nativeedge.nodes.libvirt.volume": {"properties": {"use_external_resource": {"required": false, "default": false, "description": "Use external object. The default is `false`.\n"}, "resource_id": {"required": false, "default": "", "description": "Used to identify the object when `use_external_resource` is true.\n"}, "backup_dir": {"default": "./"}, "libvirt_auth": {"default": "qemu:///system"}, "params": {"type": "nativeedge.datatypes.volume"}}, "derived_from": "nativeedge.nodes.Tier"}, "nativeedge.nodes.libvirt.ISO9660": {"properties": {"use_external_resource": {"required": false, "default": false, "description": "Use external object. The default is `false`.\n"}, "resource_id": {"required": false, "default": "", "description": "Used to identify the object when `use_external_resource` is true.\n"}, "backup_dir": {"default": "./"}, "libvirt_auth": {"default": "qemu:///system"}, "params": {"type": "nativeedge.datatypes.iso9660"}}, "derived_from": "nativeedge.nodes.Tier"}}